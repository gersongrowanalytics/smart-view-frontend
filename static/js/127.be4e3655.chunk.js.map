{"version":3,"sources":["routes/components/dataEntry/Upload/UploadClick.js","routes/components/dataEntry/Upload/Avatar.js","routes/components/dataEntry/Upload/UploadDefault.js","routes/components/dataEntry/Upload/UploadPicture.js","routes/components/dataEntry/Upload/CompleteControl.js","routes/components/dataEntry/Upload/DragDrop.js","routes/components/dataEntry/Upload/UploadListStyle.js","routes/components/dataEntry/Upload/index.js"],"names":["props","name","action","headers","authorization","onChange","info","file","status","console","log","fileList","message","success","error","UploadClick","className","title","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","isJPG","type","isLt2M","size","Avatar","state","loading","handleChange","originFileObj","imageUrl","setState","uploadButton","this","LoadingOutlined","PlusOutlined","listType","showUploadList","src","alt","React","Component","defaultFileList","uid","reponse","url","UploadDefault","UploadPicture","previewVisible","previewImage","handleCancel","handlePreview","thumbUrl","onPreview","length","visible","footer","onCancel","style","width","CompleteControl","slice","map","response","filter","multiple","Dragger","Upload","DragDrop","props2","UploadListStyle","lg","md","sm","xs"],"mappings":"+PAKMA,EAAQ,CACZC,KAAM,OACNC,OAAQ,wCACRC,QAAS,CACPC,cAAe,sBAEjBC,SANY,SAMHC,GACkB,cAArBA,EAAKC,KAAKC,QACZC,QAAQC,IAAIJ,EAAKC,KAAMD,EAAKK,UAEL,SAArBL,EAAKC,KAAKC,OACZI,IAAQC,QAAR,UAAmBP,EAAKC,KAAKN,KAA7B,gCAC8B,UAArBK,EAAKC,KAAKC,QACnBI,IAAQE,MAAR,UAAiBR,EAAKC,KAAKN,KAA3B,2BAkBSc,EAbK,WAChB,OACE,kBAAC,IAAD,CAAMC,UAAU,UAAUC,MAAM,gBAC9B,kBAAC,IAAWjB,EACV,kBAAC,IAAD,KACE,kBAAC,IAAD,MADF,uB,oBCtBV,SAASkB,EAAUC,EAAKC,GACtB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,WACtDH,EAAOI,cAAcN,GAGvB,SAASO,EAAanB,GACpB,IAAMoB,EAAsB,eAAdpB,EAAKqB,KACdD,GACHf,IAAQE,MAAM,iCAEhB,IAAMe,EAAStB,EAAKuB,KAAO,KAAO,KAAO,EAIzC,OAHKD,GACHjB,IAAQE,MAAM,gCAETa,GAASE,E,IA+CHE,E,4MA3CbC,MAAQ,CACNC,SAAS,G,EAEXC,aAAe,SAAC5B,GACW,cAArBA,EAAKC,KAAKC,OAIW,SAArBF,EAAKC,KAAKC,QAEZU,EAAUZ,EAAKC,KAAK4B,eAAe,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAC3DD,WACAH,SAAS,OAPX,EAAKI,SAAS,CAACJ,SAAS,K,uDAa1B,IAAMK,EACJ,6BACGC,KAAKP,MAAMC,QAAU,kBAACO,EAAA,EAAD,MAAsB,kBAACC,EAAA,EAAD,MAC5C,yBAAKzB,UAAU,mBAAf,WAGEoB,EAAWG,KAAKP,MAAMI,SAC5B,OACE,kBAAC,IAAD,CAAMpB,UAAU,UAAUC,MAAM,UAC9B,kBAAC,IAAD,CACEhB,KAAK,SACLyC,SAAS,eACT1B,UAAU,kBACV2B,gBAAgB,EAChBzC,OAAO,wCACPwB,aAAcA,EACdrB,SAAUkC,KAAKL,cAEdE,EAAW,yBAAKQ,IAAKR,EAAUS,IAAI,KAAOP,Q,GArChCQ,IAAMC,WCnBrB/C,EAAQ,CACZE,OAAQ,wCACRG,SAFY,YAEgB,IAAlBE,EAAiB,EAAjBA,KAAMI,EAAW,EAAXA,SACM,cAAhBJ,EAAKC,QACPC,QAAQC,IAAIH,EAAMI,IAGtBqC,gBAAiB,CAAC,CAChBC,IAAK,EACLhD,KAAM,UACNO,OAAQ,OACR0C,QAAS,mBACTC,IAAK,gCACJ,CACDF,IAAK,EACLhD,KAAM,UACNO,OAAQ,OACR2C,IAAK,gCACJ,CACDF,IAAK,EACLhD,KAAM,UACNO,OAAQ,QACR0C,QAAS,mBACTC,IAAK,kCAiBMC,EAbO,WAClB,OACE,kBAAC,IAAD,CAAMpC,UAAU,UAAUC,MAAM,kBAC9B,kBAAC,IAAWjB,EACV,kBAAC,IAAD,KACE,kBAAC,IAAD,MADF,c,4BCmBKqD,E,4MAjDbrB,MAAQ,CACNsB,gBAAgB,EAChBC,aAAc,GACd5C,SAAU,CAAC,CACTsC,KAAM,EACNhD,KAAM,UACNO,OAAQ,OACR2C,IAAK,kF,EAITK,aAAe,kBAAM,EAAKnB,SAAS,CAACiB,gBAAgB,K,EAEpDG,cAAgB,SAAClD,GACf,EAAK8B,SAAS,CACZkB,aAAchD,EAAK4C,KAAO5C,EAAKmD,SAC/BJ,gBAAgB,K,EAIpBpB,aAAe,gBAAEvB,EAAF,EAAEA,SAAF,OAAgB,EAAK0B,SAAS,CAAC1B,c,uDAEpC,IAAD,EAC0C4B,KAAKP,MAA/CsB,EADA,EACAA,eAAgBC,EADhB,EACgBA,aAAc5C,EAD9B,EAC8BA,SAC/B2B,EACJ,6BACE,kBAAC,IAAD,MACA,yBAAKtB,UAAU,mBAAf,WAGJ,OACE,kBAAC,IAAD,CAAMC,MAAM,gBAAgBD,UAAU,oBACpC,kBAAC,IAAD,CACEd,OAAO,wCACPwC,SAAS,eACT/B,SAAUA,EACVgD,UAAWpB,KAAKkB,cAChBpD,SAAUkC,KAAKL,cAEdvB,EAASiD,QAAU,EAAI,KAAOtB,GAEjC,kBAAC,IAAD,CAAOuB,QAASP,EAAgBQ,OAAQ,KAAMC,SAAUxB,KAAKiB,cAC3D,yBAAKX,IAAI,UAAUmB,MAAO,CAACC,MAAO,QAASrB,IAAKW,U,GA3C9BT,IAAMC,WCsDnBmB,E,4MArDblC,MAAQ,CACNrB,SAAU,CAAC,CACTsC,KAAM,EACNhD,KAAM,UACNO,OAAQ,OACR2C,IAAK,kC,EAGTjB,aAAe,SAAC5B,GACd,IAAIK,EAAWL,EAAKK,SAgBpBA,GATAA,GAHAA,EAAWA,EAASwD,OAAO,IAGPC,KAAI,SAAC7D,GAKvB,OAJIA,EAAK8D,WAEP9D,EAAK4C,IAAM5C,EAAK8D,SAASlB,KAEpB5C,MAIW+D,QAAO,SAAC/D,GAC1B,OAAIA,EAAK8D,UACyB,YAAzB9D,EAAK8D,SAAS7D,UAKzB,EAAK6B,SAAS,CAAC1B,c,uDAIf,IAAMX,EAAQ,CACZE,OAAQ,wCACRG,SAAUkC,KAAKL,aACfqC,UAAU,GAEZ,OACE,kBAAC,IAAD,CAAMvD,UAAU,UAAUC,MAAM,oBAC9B,kBAAC,IAAD,iBAAYjB,EAAZ,CAAmBW,SAAU4B,KAAKP,MAAMrB,WACtC,kBAAC,IAAD,KACE,kBAAC,IAAD,MADF,iB,GA7CoBmC,IAAMC,W,mBCA9ByB,EAAUC,IAAOD,QAEjBxE,EAAQ,CACZC,KAAM,OACNsE,UAAU,EACVrE,OAAQ,wCACRG,SAJY,SAIHC,GACP,IAAME,EAASF,EAAKC,KAAKC,OACV,cAAXA,GACFC,QAAQC,IAAIJ,EAAKC,KAAMD,EAAKK,UAEf,SAAXH,EACFI,IAAQC,QAAR,UAAmBP,EAAKC,KAAKN,KAA7B,iCACoB,UAAXO,GACTI,IAAQE,MAAR,UAAiBR,EAAKC,KAAKN,KAA3B,2BAqBSyE,EAhBE,WACb,OACE,kBAAC,IAAD,CAAM1D,UAAU,UAAUC,MAAM,YAC9B,kBAACuD,EAAYxE,EACX,uBAAGgB,UAAU,wBACX,kBAAC,IAAD,OAEF,uBAAGA,UAAU,mBAAb,6CACA,uBAAGA,UAAU,mBAAb,6GC3BJL,EAAW,CAAC,CAChBsC,KAAM,EACNhD,KAAM,UACNO,OAAQ,OACR2C,IAAK,+EACLO,SAAU,gFACT,CACDT,KAAM,EACNhD,KAAM,UACNO,OAAQ,OACR2C,IAAK,+EACLO,SAAU,iFAGN1D,EAAQ,CACZE,OAAQ,wCACRwC,SAAU,UACVM,gBAAgB,GAAD,OAAMrC,IAGjBgE,EAAS,CACbzE,OAAQ,wCACRwC,SAAU,UACVM,gBAAgB,GAAD,OAAMrC,GACrBK,UAAW,sBAsBE4D,EAnBS,WACtB,OACE,kBAAC,IAAD,CAAM5D,UAAU,UAAUC,MAAM,qBAC9B,kBAAC,IAAWjB,EACV,kBAAC,IAAD,KACE,kBAAC,IAAD,MADF,YAIF,6BACA,6BACA,kBAAC,IAAW2E,EACV,kBAAC,IAAD,KACE,kBAAC,IAAD,MADF,cC7BFF,E,uKAGF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKI,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAKH,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GAdWjC,aAsBN0B","file":"static/js/127.be4e3655.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Button, Card, message, Upload} from \"antd\";\r\nimport Icon from '@ant-design/icons';\r\nimport UploadOutlined from \"@ant-design/icons/lib/icons/UploadOutlined\";\r\n\r\nconst props = {\r\n  name: 'file',\r\n  action: '//jsonplaceholder.typicode.com/posts/',\r\n  headers: {\r\n    authorization: 'authorization-text',\r\n  },\r\n  onChange(info) {\r\n    if (info.file.status !== 'uploading') {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (info.file.status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully`);\r\n    } else if (info.file.status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n};\r\n\r\nconst UploadClick = () => {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Upload Click\">\r\n        <Upload {...props}>\r\n          <Button>\r\n            <UploadOutlined /> Click to Upload\r\n          </Button>\r\n        </Upload>\r\n      </Card>\r\n    );\r\n  }\r\n;\r\n\r\nexport default UploadClick;\r\n","import React from \"react\";\r\nimport {Card, message, Upload} from \"antd\";\r\nimport Icon from '@ant-design/icons';\r\nimport {LoadingOutlined,PlusOutlined} from \"@ant-design/icons\";\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJPG = file.type === 'image/jpeg';\r\n  if (!isJPG) {\r\n    message.error('You can only upload JPG file!');\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error('Image must smaller than 2MB!');\r\n  }\r\n  return isJPG && isLt2M;\r\n}\r\n\r\nclass Avatar extends React.Component {\r\n  state = {\r\n    loading: false,\r\n  };\r\n  handleChange = (info) => {\r\n    if (info.file.status === 'uploading') {\r\n      this.setState({loading: true});\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, imageUrl => this.setState({\r\n        imageUrl,\r\n        loading: false,\r\n      }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div>\r\n        {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const imageUrl = this.state.imageUrl;\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Avatar\">\r\n        <Upload\r\n          name=\"avatar\"\r\n          listType=\"picture-card\"\r\n          className=\"avatar-uploader\"\r\n          showUploadList={false}\r\n          action=\"//jsonplaceholder.typicode.com/posts/\"\r\n          beforeUpload={beforeUpload}\r\n          onChange={this.handleChange}\r\n        >\r\n          {imageUrl ? <img src={imageUrl} alt=\"\"/> : uploadButton}\r\n        </Upload>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport {Button, Card, Upload} from \"antd\";\r\nimport UploadOutlined from \"@ant-design/icons/lib/icons/UploadOutlined\";\r\n\r\nconst props = {\r\n  action: '//jsonplaceholder.typicode.com/posts/',\r\n  onChange({file, fileList}) {\r\n    if (file.status !== 'uploading') {\r\n      console.log(file, fileList);\r\n    }\r\n  },\r\n  defaultFileList: [{\r\n    uid: 1,\r\n    name: 'xxx.png',\r\n    status: 'done',\r\n    reponse: 'Server Error 500', // custom error message to show\r\n    url: 'http://www.baidu.com/xxx.png',\r\n  }, {\r\n    uid: 2,\r\n    name: 'yyy.png',\r\n    status: 'done',\r\n    url: 'http://www.baidu.com/yyy.png',\r\n  }, {\r\n    uid: 3,\r\n    name: 'zzz.png',\r\n    status: 'error',\r\n    reponse: 'Server Error 500', // custom error message to show\r\n    url: 'http://www.baidu.com/zzz.png',\r\n  }],\r\n};\r\n\r\nconst UploadDefault = () => {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Upload Default\">\r\n        <Upload {...props}>\r\n          <Button>\r\n            <UploadOutlined /> Upload\r\n          </Button>\r\n        </Upload>\r\n      </Card>\r\n    );\r\n  }\r\n;\r\n\r\nexport default UploadDefault;\r\n","import React from \"react\";\r\nimport {Card, Modal, Upload} from \"antd\";\r\nimport PlusOutlined from \"@ant-design/icons/lib/icons/PlusOutlined\";\r\n\r\nclass UploadPicture extends React.Component {\r\n  state = {\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    fileList: [{\r\n      uid: -1,\r\n      name: 'xxx.png',\r\n      status: 'done',\r\n      url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n    }],\r\n  };\r\n\r\n  handleCancel = () => this.setState({previewVisible: false});\r\n\r\n  handlePreview = (file) => {\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  handleChange = ({fileList}) => this.setState({fileList});\r\n\r\n  render() {\r\n    const {previewVisible, previewImage, fileList} = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <PlusOutlined />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <Card title=\"UploadPicture\" className=\"gx-card clearfix\">\r\n        <Upload\r\n          action=\"//jsonplaceholder.typicode.com/posts/\"\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 3 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{width: '100%'}} src={previewImage}/>\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UploadPicture;\r\n","import React from \"react\";\r\nimport {Button, Card, Upload} from \"antd\";\r\nimport UploadOutlined from \"@ant-design/icons/lib/icons/UploadOutlined\";\r\n\r\nclass CompleteControl extends React.Component {\r\n  state = {\r\n    fileList: [{\r\n      uid: -1,\r\n      name: 'xxx.png',\r\n      status: 'done',\r\n      url: 'http://www.baidu.com/xxx.png',\r\n    }],\r\n  };\r\n  handleChange = (info) => {\r\n    let fileList = info.fileList;\r\n\r\n    // 1. Limit the number of uploaded files\r\n    //    Only to show two recent uploaded files, and old ones will be replaced by the new\r\n    fileList = fileList.slice(-2);\r\n\r\n    // 2. read from response and show file link\r\n    fileList = fileList.map((file) => {\r\n      if (file.response) {\r\n        // Component will show file.url as link\r\n        file.url = file.response.url;\r\n      }\r\n      return file;\r\n    });\r\n\r\n    // 3. filter successfully uploaded files according to response from server\r\n    fileList = fileList.filter((file) => {\r\n      if (file.response) {\r\n        return file.response.status === 'success';\r\n      }\r\n      return true;\r\n    });\r\n\r\n    this.setState({fileList});\r\n  };\r\n\r\n  render() {\r\n    const props = {\r\n      action: '//jsonplaceholder.typicode.com/posts/',\r\n      onChange: this.handleChange,\r\n      multiple: true,\r\n    };\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Complete Control\">\r\n        <Upload {...props} fileList={this.state.fileList}>\r\n          <Button>\r\n            <UploadOutlined /> upload\r\n          </Button>\r\n        </Upload>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CompleteControl;\r\n","import React from \"react\";\r\nimport {Card, message, Upload} from \"antd\";\r\nimport InboxOutlined from \"@ant-design/icons/lib/icons/InboxOutlined\";\r\n\r\nconst Dragger = Upload.Dragger;\r\n\r\nconst props = {\r\n  name: 'file',\r\n  multiple: true,\r\n  action: '//jsonplaceholder.typicode.com/posts/',\r\n  onChange(info) {\r\n    const status = info.file.status;\r\n    if (status !== 'uploading') {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n};\r\n\r\nconst DragDrop = () => {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"DragDrop\">\r\n        <Dragger {...props}>\r\n          <p className=\"ant-upload-drag-icon\">\r\n            <InboxOutlined />\r\n          </p>\r\n          <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n          <p className=\"ant-upload-hint\">Support for a single or bulk upload. Strictly prohibit from uploading company\r\n            data or other band files</p>\r\n        </Dragger>\r\n      </Card>\r\n    );\r\n  }\r\n;\r\n\r\nexport default DragDrop;\r\n","import React from \"react\";\r\nimport {Button, Card, Upload} from \"antd\";\r\nimport UploadOutlined from \"@ant-design/icons/lib/icons/UploadOutlined\";\r\n\r\nconst fileList = [{\r\n  uid: -1,\r\n  name: 'xxx.png',\r\n  status: 'done',\r\n  url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n  thumbUrl: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n}, {\r\n  uid: -2,\r\n  name: 'yyy.png',\r\n  status: 'done',\r\n  url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n  thumbUrl: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n}];\r\n\r\nconst props = {\r\n  action: '//jsonplaceholder.typicode.com/posts/',\r\n  listType: 'picture',\r\n  defaultFileList: [...fileList],\r\n};\r\n\r\nconst props2 = {\r\n  action: '//jsonplaceholder.typicode.com/posts/',\r\n  listType: 'picture',\r\n  defaultFileList: [...fileList],\r\n  className: 'upload-list-inline',\r\n};\r\n\r\nconst UploadListStyle = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Upload ListS tyle\">\r\n      <Upload {...props}>\r\n        <Button>\r\n          <UploadOutlined /> upload\r\n        </Button>\r\n      </Upload>\r\n      <br/>\r\n      <br/>\r\n      <Upload {...props2}>\r\n        <Button>\r\n          <UploadOutlined /> upload\r\n        </Button>\r\n      </Upload>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UploadListStyle;\r\n","import React, {Component} from \"react\";\r\n\r\nimport {Col, Row} from \"antd\";\r\n\r\nimport UploadClick from \"./UploadClick\";\r\nimport Avatar from \"./Avatar\";\r\nimport UploadDefault from \"./UploadDefault\";\r\nimport UploadPicture from \"./UploadPicture\";\r\nimport CompleteControl from \"./CompleteControl\";\r\nimport DragDrop from \"./DragDrop\";\r\nimport UploadListStyle from \"./UploadListStyle\";\r\n\r\n\r\nclass Upload extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <UploadClick/>\r\n          <Avatar/>\r\n          <UploadDefault/>\r\n          <UploadPicture/>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <CompleteControl/>\r\n          <DragDrop/>\r\n          <UploadListStyle/>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Upload;\r\n"],"sourceRoot":""}