{"version":3,"sources":["../node_modules/@ant-design/icons/es/components/AntdIcon.js","../node_modules/@ant-design/icons/es/components/IconBase.js","../node_modules/@ant-design/icons/es/components/twoTonePrimaryColor.js","../node_modules/@ant-design/icons-svg/es/asn/SearchOutlined.js","../node_modules/@ant-design/icons/es/icons/SearchOutlined.js","../node_modules/antd/es/auto-complete/index.js","routes/components/dataEntry/AutoComplete/Basic.js","routes/components/dataEntry/AutoComplete/Customized.js","routes/components/dataEntry/AutoComplete/CustomizeInputComponent.js","routes/components/dataEntry/AutoComplete/NonCaseSensitiveAutoComplete.js","routes/components/dataEntry/AutoComplete/LookupPatterns.js","routes/components/dataEntry/AutoComplete/index.js"],"names":["setTwoToneColor","Icon","React","props","ref","className","icon","spin","rotate","tabIndex","onClick","twoToneColor","restProps","_objectWithoutProperties","classString","classNames","_defineProperty","concat","name","Boolean","svgClassString","iconTabIndex","undefined","svgStyle","msTransform","transform","_normalizeTwoToneColo","normalizeTwoToneColors","_normalizeTwoToneColo2","_slicedToArray","primaryColor","secondaryColor","Object","assign","role","ReactIcon","style","displayName","getTwoToneColor","twoToneColorPalette","calculated","IconBase","colors","getSecondaryColor","useInsertStyles","warning","isIconDefinition","target","_objectSpread","generate","width","height","fill","getTwoToneColors","setTwoToneColors","_ref","SearchOutlined","AntdIcon","SearchOutlinedSvg","Option","Select","InternalSelect","isSelectOptionOrSelectOptGroup","child","type","isSelectOption","isSelectOptGroup","AutoComplete","customizeInput","customizePrefixCls","prefixCls","children","dataSource","childNodes","toArray","selectRef","current","length","isValidElement","_childNodes","optionChildren","getInputElement","map","item","_typeof","key","value","optionValue","text","Error","devWarning","ConfigConsumer","getPrefixCls","_extends","omit","mode","SECRET_COMBOBOX_MODE_DO_NOT_USE","RefAutoComplete","onSelect","console","log","Basic","state","handleSearch","setState","this","title","onSearch","placeholder","Component","Customized","result","indexOf","domain","email","TextArea","Input","CustomizeInputComponent","handleKeyPress","ev","onKeyPress","NonCaseSensitiveAutoComplete","filterOption","inputValue","option","toUpperCase","OptGroup","options","count","group","label","float","href","rel","opt","disabled","LookupPatterns","dropdownClassName","dropdownMatchSelectWidth","dropdownStyle","size","optionLabelProp","suffix","lg","md","sm","xs"],"mappings":"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","file":"static/js/31.6fd54e0e.chunk.js","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport ReactIcon from './IconBase';\nimport { getTwoToneColor, setTwoToneColor } from './twoTonePrimaryColor';\nimport { normalizeTwoToneColors } from '../utils'; // Initial setting\n// should move it to antd main repo?\n\nsetTwoToneColor('#1890ff');\nvar Icon = React.forwardRef(function (props, ref) {\n  var className = props.className,\n      icon = props.icon,\n      spin = props.spin,\n      rotate = props.rotate,\n      tabIndex = props.tabIndex,\n      onClick = props.onClick,\n      twoToneColor = props.twoToneColor,\n      restProps = _objectWithoutProperties(props, [\"className\", \"icon\", \"spin\", \"rotate\", \"tabIndex\", \"onClick\", \"twoToneColor\"]);\n\n  var classString = classNames('anticon', _defineProperty({}, \"anticon-\".concat(icon.name), Boolean(icon.name)), className);\n  var svgClassString = classNames({\n    'anticon-spin': !!spin || icon.name === 'loading'\n  });\n  var iconTabIndex = tabIndex;\n\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n  }\n\n  var svgStyle = rotate ? {\n    msTransform: \"rotate(\".concat(rotate, \"deg)\"),\n    transform: \"rotate(\".concat(rotate, \"deg)\")\n  } : undefined;\n\n  var _normalizeTwoToneColo = normalizeTwoToneColors(twoToneColor),\n      _normalizeTwoToneColo2 = _slicedToArray(_normalizeTwoToneColo, 2),\n      primaryColor = _normalizeTwoToneColo2[0],\n      secondaryColor = _normalizeTwoToneColo2[1];\n\n  return React.createElement(\"span\", Object.assign({\n    role: \"img\",\n    \"aria-label\": icon.name\n  }, restProps, {\n    ref: ref,\n    tabIndex: iconTabIndex,\n    onClick: onClick,\n    className: classString\n  }), React.createElement(ReactIcon, {\n    className: svgClassString,\n    icon: icon,\n    primaryColor: primaryColor,\n    secondaryColor: secondaryColor,\n    style: svgStyle\n  }));\n});\nIcon.displayName = 'AntdIcon';\nIcon.getTwoToneColor = getTwoToneColor;\nIcon.setTwoToneColor = setTwoToneColor;\nexport default Icon;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { generate, getSecondaryColor, isIconDefinition, warning, useInsertStyles } from '../utils';\nvar twoToneColorPalette = {\n  primaryColor: '#333',\n  secondaryColor: '#E6E6E6',\n  calculated: false\n};\n\nfunction setTwoToneColors(_ref) {\n  var primaryColor = _ref.primaryColor,\n      secondaryColor = _ref.secondaryColor;\n  twoToneColorPalette.primaryColor = primaryColor;\n  twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);\n  twoToneColorPalette.calculated = !!secondaryColor;\n}\n\nfunction getTwoToneColors() {\n  return _objectSpread({}, twoToneColorPalette);\n}\n\nvar IconBase = function IconBase(props) {\n  var icon = props.icon,\n      className = props.className,\n      onClick = props.onClick,\n      style = props.style,\n      primaryColor = props.primaryColor,\n      secondaryColor = props.secondaryColor,\n      restProps = _objectWithoutProperties(props, [\"icon\", \"className\", \"onClick\", \"style\", \"primaryColor\", \"secondaryColor\"]);\n\n  var colors = twoToneColorPalette;\n\n  if (primaryColor) {\n    colors = {\n      primaryColor: primaryColor,\n      secondaryColor: secondaryColor || getSecondaryColor(primaryColor)\n    };\n  }\n\n  useInsertStyles();\n  warning(isIconDefinition(icon), \"icon should be icon definiton, but got \".concat(icon));\n\n  if (!isIconDefinition(icon)) {\n    return null;\n  }\n\n  var target = icon;\n\n  if (target && typeof target.icon === 'function') {\n    target = _objectSpread(_objectSpread({}, target), {}, {\n      icon: target.icon(colors.primaryColor, colors.secondaryColor)\n    });\n  }\n\n  return generate(target.icon, \"svg-\".concat(target.name), _objectSpread({\n    className: className,\n    onClick: onClick,\n    style: style,\n    'data-icon': target.name,\n    width: '1em',\n    height: '1em',\n    fill: 'currentColor',\n    'aria-hidden': 'true'\n  }, restProps));\n};\n\nIconBase.displayName = 'IconReact';\nIconBase.getTwoToneColors = getTwoToneColors;\nIconBase.setTwoToneColors = setTwoToneColors;\nexport default IconBase;","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport ReactIcon from './IconBase';\nimport { normalizeTwoToneColors } from '../utils';\nexport function setTwoToneColor(twoToneColor) {\n  var _normalizeTwoToneColo = normalizeTwoToneColors(twoToneColor),\n      _normalizeTwoToneColo2 = _slicedToArray(_normalizeTwoToneColo, 2),\n      primaryColor = _normalizeTwoToneColo2[0],\n      secondaryColor = _normalizeTwoToneColo2[1];\n\n  return ReactIcon.setTwoToneColors({\n    primaryColor: primaryColor,\n    secondaryColor: secondaryColor\n  });\n}\nexport function getTwoToneColor() {\n  var colors = ReactIcon.getTwoToneColors();\n\n  if (!colors.calculated) {\n    return colors.primaryColor;\n  }\n\n  return [colors.primaryColor, colors.secondaryColor];\n}","// This icon file is generated automatically.\nvar SearchOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z\" } }] }, \"name\": \"search\", \"theme\": \"outlined\" };\nexport default SearchOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SearchOutlinedSvg from \"@ant-design/icons-svg/es/asn/SearchOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SearchOutlined = function SearchOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: SearchOutlinedSvg\n  }));\n};\n\nSearchOutlined.displayName = 'SearchOutlined';\nexport default React.forwardRef(SearchOutlined);","import _extends from \"@babel/runtime/helpers/extends\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * TODO: 4.0\n * - remove `dataSource`\n * - `size` not work with customizeInput\n * - customizeInput not feedback `ENTER` key since accessibility enhancement\n */\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport Select from '../select';\nimport { ConfigConsumer } from '../config-provider';\nimport devWarning from '../_util/devWarning';\nimport { isValidElement } from '../_util/reactNode';\nvar Option = Select.Option;\nvar InternalSelect = Select;\n\nfunction isSelectOptionOrSelectOptGroup(child) {\n  return child && child.type && (child.type.isSelectOption || child.type.isSelectOptGroup);\n}\n\nvar AutoComplete = function AutoComplete(props, ref) {\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      children = props.children,\n      dataSource = props.dataSource;\n  var childNodes = toArray(children);\n  var selectRef = React.useRef();\n  React.useImperativeHandle(ref, function () {\n    return selectRef.current;\n  }); // ============================= Input =============================\n\n  var customizeInput;\n\n  if (childNodes.length === 1 && isValidElement(childNodes[0]) && !isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    var _childNodes = _slicedToArray(childNodes, 1);\n\n    customizeInput = _childNodes[0];\n  }\n\n  var getInputElement = function getInputElement() {\n    return customizeInput;\n  }; // ============================ Options ============================\n\n\n  var optionChildren; // [Legacy] convert `children` or `dataSource` into option children\n\n  if (childNodes.length && isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    optionChildren = children;\n  } else {\n    optionChildren = dataSource ? dataSource.map(function (item) {\n      if (isValidElement(item)) {\n        return item;\n      }\n\n      switch (_typeof(item)) {\n        case 'string':\n          return /*#__PURE__*/React.createElement(Option, {\n            key: item,\n            value: item\n          }, item);\n\n        case 'object':\n          {\n            var optionValue = item.value;\n            return /*#__PURE__*/React.createElement(Option, {\n              key: optionValue,\n              value: optionValue\n            }, item.text);\n          }\n\n        default:\n          throw new Error('AutoComplete[dataSource] only supports type `string[] | Object[]`.');\n      }\n    }) : [];\n  } // ============================ Warning ============================\n\n\n  React.useEffect(function () {\n    devWarning(!('dataSource' in props), 'AutoComplete', '`dataSource` is deprecated, please use `options` instead.');\n    devWarning(!customizeInput || !('size' in props), 'AutoComplete', 'You need to control style self instead of setting `size` when using customize input.');\n  }, []);\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n    var prefixCls = getPrefixCls('select', customizePrefixCls);\n    return /*#__PURE__*/React.createElement(InternalSelect, _extends({\n      ref: selectRef\n    }, omit(props, ['dataSource']), {\n      prefixCls: prefixCls,\n      className: classNames(className, \"\".concat(prefixCls, \"-auto-complete\")),\n      mode: Select.SECRET_COMBOBOX_MODE_DO_NOT_USE,\n      getInputElement: getInputElement\n    }), optionChildren);\n  });\n};\n\nvar RefAutoComplete = /*#__PURE__*/React.forwardRef(AutoComplete);\nRefAutoComplete.Option = Option;\nexport default RefAutoComplete;","import React, {Component} from \"react\";\r\n\r\nimport {AutoComplete, Card} from \"antd\";\r\n\r\nfunction onSelect(value) {\r\n  console.log('onSelect', value);\r\n}\r\n\r\n\r\nclass Basic extends Component {\r\n  state = {\r\n    dataSource: [],\r\n  }\r\n\r\n  handleSearch = (value) => {\r\n    this.setState({\r\n      dataSource: !value ? [] : [\r\n        value,\r\n        value + value,\r\n        value + value + value,\r\n      ],\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {dataSource} = this.state;\r\n    return (\r\n      <Card className=\"gx-card\" title=\"ErrorStatus\">\r\n        <AutoComplete\r\n          dataSource={dataSource}\r\n          style={{width: 200}}\r\n          onSelect={onSelect}\r\n          onSearch={this.handleSearch}\r\n          placeholder=\"input here\"\r\n        />\r\n      </Card>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Basic;\r\n\r\n","import React, {Component} from \"react\";\r\n\r\nimport {AutoComplete, Card} from \"antd\";\r\n\r\nconst Option = AutoComplete.Option;\r\n\r\n\r\nclass Customized extends Component {\r\n  state = {\r\n    result: [],\r\n  };\r\n\r\n  handleSearch = (value) => {\r\n    let result;\r\n    if (!value || value.indexOf('@') >= 0) {\r\n      result = [];\r\n    } else {\r\n      result = ['gmail.com', '163.com', 'qq.com'].map(domain => `${value}@${domain}`);\r\n    }\r\n    this.setState({result});\r\n  };\r\n\r\n  render() {\r\n    const {result} = this.state;\r\n    const children = result.map((email) => {\r\n      return <Option key={email}>{email}</Option>;\r\n    });\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Customized\">\r\n        <AutoComplete\r\n          style={{width: 200}}\r\n          onSearch={this.handleSearch}\r\n          placeholder=\"input here\"\r\n        >\r\n          {children}\r\n        </AutoComplete>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Customized;\r\n\r\n","import React, {Component} from \"react\";\r\nimport {AutoComplete, Card, Input} from \"antd\";\r\n\r\nconst {TextArea} = Input;\r\n\r\nfunction onSelect(value) {\r\n  console.log('onSelect', value);\r\n}\r\n\r\n\r\nclass CustomizeInputComponent extends Component {\r\n  state = {\r\n    dataSource: [],\r\n  }\r\n\r\n  handleSearch = (value) => {\r\n    this.setState({\r\n      dataSource: !value ? [] : [\r\n        value,\r\n        value + value,\r\n        value + value + value,\r\n      ],\r\n    });\r\n  }\r\n\r\n  handleKeyPress = (ev) => {\r\n    console.log('handleKeyPress', ev);\r\n  }\r\n\r\n\r\n  render() {\r\n    const {dataSource} = this.state;\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Customize Input Component\">\r\n        <AutoComplete\r\n          dataSource={dataSource}\r\n          style={{width: 200}}\r\n          onSelect={onSelect}\r\n          onSearch={this.handleSearch}\r\n        >\r\n        <TextArea\r\n          placeholder=\"input here\"\r\n          className=\"custom\"\r\n          style={{height: 50}}\r\n          onKeyPress={this.handleKeyPress}\r\n        />\r\n        </AutoComplete>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default CustomizeInputComponent;\r\n\r\n","import React from \"react\";\r\nimport {AutoComplete, Card} from \"antd\";\r\n\r\nconst dataSource = ['Burns Bay Road', 'Downing Street', 'Wall Street'];\r\n\r\nconst NonCaseSensitiveAutoComplete = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Non CaseSensitive AutoComplete\">\r\n      <AutoComplete\r\n        style={{width: 200}}\r\n        dataSource={dataSource}\r\n        placeholder=\"try to type `b`\"\r\n        filterOption={(inputValue, option) => option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default NonCaseSensitiveAutoComplete;\r\n","import React from \"react\";\r\nimport {AutoComplete, Card, Input} from \"antd\";\r\nimport Icon from '@ant-design/icons';\r\nimport {SearchOutlined} from \"@ant-design/icons\";\r\nconst Option = AutoComplete.Option;\r\nconst OptGroup = AutoComplete.OptGroup;\r\n\r\nconst dataSource = [{\r\n  title: 'g-axon',\r\n  children: [{\r\n    title: 'AntDesign',\r\n    count: 10000,\r\n  }, {\r\n    title: 'AntDesign UI',\r\n    count: 10600,\r\n  }],\r\n}, {\r\n  title: 'jumbo',\r\n  children: [{\r\n    title: 'jumbo UI',\r\n    count: 60100,\r\n  }, {\r\n    title: 'AntDesign',\r\n    count: 30010,\r\n  }],\r\n}, {\r\n  title: 'React',\r\n  children: [{\r\n    title: 'AntDesign 2.0',\r\n    count: 100000,\r\n  }],\r\n}];\r\n\r\nfunction renderTitle(title) {\r\n  return (\r\n    <span>\r\n      {title}\r\n      <a\r\n        style={{float: 'right'}}\r\n        href=\"https://www.google.com/search?q=antd\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >version 1.1\r\n      </a>\r\n    </span>\r\n  );\r\n}\r\n\r\nconst options = dataSource.map(group => (\r\n  <OptGroup\r\n    key={group.title}\r\n    label={renderTitle(group.title)}\r\n  >\r\n    {group.children.map(opt => (\r\n      <Option key={opt.title} value={opt.title}>\r\n        {opt.title}\r\n        <span className=\"certain-search-item-count\">{opt.count}</span>\r\n      </Option>\r\n    ))}\r\n  </OptGroup>\r\n)).concat([\r\n  <Option disabled key=\"all\" className=\"show-all\">\r\n    <a\r\n      href=\"https://www.google.com/search?q=antd\"\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      version 1.2\r\n    </a>\r\n  </Option>,\r\n]);\r\n\r\nconst LookupPatterns = () => {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Lookup Patterns\">\r\n        <div className=\"certain-category-search-wrapper\" style={{width: 250}}>\r\n          <AutoComplete\r\n            className=\"certain-category-search\"\r\n            dropdownClassName=\"certain-category-search-dropdown\"\r\n            dropdownMatchSelectWidth={false}\r\n            dropdownStyle={{width: 300}}\r\n            size=\"large\"\r\n            style={{width: '100%'}}\r\n            dataSource={options}\r\n            placeholder=\"input here\"\r\n            optionLabelProp=\"value\"\r\n          >\r\n            <Input suffix={<SearchOutlined/>}/>\r\n          </AutoComplete>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n;\r\n\r\nexport default LookupPatterns;\r\n","import React from \"react\";\r\nimport {Col, Row} from \"antd\";\r\n\r\nimport Basic from \"./Basic\";\r\nimport Customized from \"./Customized\";\r\nimport CustomizeInputComponent from \"./CustomizeInputComponent\";\r\nimport NonCaseSensitiveAutoComplete from \"./NonCaseSensitiveAutoComplete\";\r\nimport LookupPatterns from \"./LookupPatterns\";\r\n\r\nconst AutoComplete = () => {\r\n  return (\r\n    <Row>\r\n      <Col lg={12} md={12} sm={24} xs={24}>\r\n        <Basic/>\r\n        <Customized/>\r\n        <CustomizeInputComponent/>\r\n      </Col>\r\n      <Col lg={12} md={12} sm={24} xs={24}>\r\n        <NonCaseSensitiveAutoComplete/>\r\n        <LookupPatterns/>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default AutoComplete;\r\n"],"sourceRoot":""}