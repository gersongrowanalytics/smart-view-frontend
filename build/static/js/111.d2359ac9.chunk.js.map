{"version":3,"sources":["routes/algolia/urlSync.js","routes/algolia/Header.js","routes/algolia/SideBar.js","routes/algolia/Footer.js","routes/algolia/ProductItem.js","routes/algolia/ProductList.js","routes/algolia/index.js"],"names":["App","searchStateToUrl","searchState","window","location","pathname","qs","stringify","ConnectedSearchBox","connectSearchBox","currentRefinement","refine","className","type","placeholder","value","onChange","e","target","autoComplete","id","AlgoliaHeader","SortBy","items","label","defaultRefinement","Sider","Layout","Sidebar","ClearRefinements","translations","reset","HierarchicalMenu","attributes","Panel","header","RefinementList","attribute","operator","limit","searchable","RatingMenu","max","RangeInput","href","children","ProductItem","item","console","log","icons","i","suffixClassName","rating","suffixXlink","push","key","aria-hidden","width","height","xlinkHref","src","image","alt","Highlight","hit","price","ProductList","hits","map","product","xl","lg","md","sm","xs","objectID","Content","searchClient","algoliasearch","CustomResults","connectStateResults","searchResult","nbHits","query","Stats","ConnectedProducts","connectHits","withUrlSync","props","InstantSearch","indexName","createURL","onSearchStateChange","Configure","hitsPerPage","Header","Footer","Pagination","showLast","clearTimeout","debouncedSetState","setTimeout","history","pushState","setState","state","parse","search","slice","addEventListener","this","Component"],"mappings":"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","file":"static/js/111.d2359ac9.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport qs from 'qs';\r\n\r\nconst updateAfter = 700;\r\nconst searchStateToUrl = searchState =>\r\n  searchState ? `${window.location.pathname}?${qs.stringify(searchState)}` : '';\r\n\r\nexport const withUrlSync = App =>\r\n  class urlSync extends Component {\r\n    onSearchStateChange = searchState => {\r\n      clearTimeout(this.debouncedSetState);\r\n      this.debouncedSetState = setTimeout(() => {\r\n        window.history.pushState(\r\n          searchState,\r\n          null,\r\n          searchStateToUrl(searchState)\r\n        );\r\n      }, updateAfter);\r\n      this.setState({searchState});\r\n    };\r\n\r\n    constructor() {\r\n      super();\r\n      this.state = {searchState: qs.parse(window.location.search.slice(1))};\r\n      window.addEventListener('popstate', ({state: searchState}) =>\r\n        this.setState({searchState})\r\n      );\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <App\r\n          {...this.props}\r\n          searchState={this.state.searchState}\r\n          onSearchStateChange={this.onSearchStateChange}\r\n          createURL={searchStateToUrl}\r\n        />\r\n      );\r\n    }\r\n  };\r\n","import React from \"react\";\r\nimport {connectSearchBox, SortBy} from \"react-instantsearch-dom\";\r\n\r\nconst AlgoliaHeader = () => (\r\n  <div className=\"gx-algolia-header\">\r\n    <ConnectedSearchBox/>\r\n    <div className=\"gx-algolia-sort-by\">\r\n      <label>Sort by</label>\r\n      <SortBy\r\n        items={[\r\n          {value: 'ikea', label: 'Featured'},\r\n          {value: 'ikea_price_asc', label: 'Price asc.'},\r\n          {value: 'ikea_price_desc', label: 'Price desc.'},\r\n        ]}\r\n        defaultRefinement=\"ikea\"\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\nconst CustomSearchBox = ({currentRefinement, refine}) => (\r\n  <div className=\"gx-search-bar gx-lt-icon-search-bar\">\r\n    <div className=\"gx-form-group\">\r\n      <input\r\n        type=\"search\"\r\n        placeholder=\"Search here...\"\r\n        value={currentRefinement}\r\n        onChange={e => refine(e.target.value)}\r\n        autoComplete=\"off\"\r\n        className=\"ant-input form-control\"\r\n        id=\"q\"\r\n      />\r\n      <span className=\"gx-search-icon gx-pointer\"><i className=\"icon icon-search\"/></span>\r\n    </div>\r\n  </div>\r\n);\r\nconst ConnectedSearchBox = connectSearchBox(CustomSearchBox);\r\n\r\nexport default AlgoliaHeader;\r\n","import React from \"react\";\r\nimport {Layout} from \"antd\";\r\nimport {\r\n  ClearRefinements,\r\n  HierarchicalMenu,\r\n  Panel,\r\n  RangeInput,\r\n  RatingMenu,\r\n  RefinementList,\r\n} from \"react-instantsearch-dom\";\r\n\r\nconst {Sider} = Layout;\r\nconst Sidebar = () => (\r\n  <Sider className=\"gx-algolia-sidebar\">\r\n    <div className=\"gx-algolia-sidebar-content\">\r\n      <ClearRefinements\r\n        translations={{\r\n          reset: 'Clear all filters',\r\n        }}\r\n      />\r\n\r\n      <div className=\"gx-algolia-category-item\">\r\n        <div className=\"gx-algolia-category-title\">Show results for</div>\r\n        <HierarchicalMenu\r\n          attributes={['category', 'sub_category', 'sub_sub_category']}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"gx-algolia-category-item\">\r\n        <div className=\"gx-algolia-category-title\">Refine By</div>\r\n\r\n        <Panel header={<span>Type</span>}>\r\n          <RefinementList className=\"gx-algolia-refinementList\" attribute=\"type\" operator=\"or\" limit={5} searchable/>\r\n        </Panel>\r\n\r\n        <Panel header={<span>Materials</span>}>\r\n          <RefinementList className=\"gx-algolia-refinementList\"\r\n                          attribute=\"materials\"\r\n                          operator=\"or\"\r\n                          limit={5}\r\n                          searchable\r\n          />\r\n        </Panel>\r\n\r\n\r\n        <Panel header={<span>Rating</span>}>\r\n          <RatingMenu className=\"gx-algolia-refinementList\" attribute=\"rating\" max={5}/>\r\n        </Panel>\r\n\r\n        <Panel header={<span>Price</span>}>\r\n          <RangeInput className=\"gx-algolia-refinementList\" attribute=\"price\"/>\r\n        </Panel>\r\n      </div>\r\n\r\n      <div className=\"thank-you\">\r\n        Data courtesy of <a href=\"http://www.ikea.com/\">ikea.com</a>\r\n      </div>\r\n    </div>\r\n  </Sider>\r\n);\r\n\r\n\r\nexport default Sidebar;\r\n\r\n","import React from \"react\";\r\n\r\nexport default ({children}) =>\r\n  <div className=\"gx-algolia-footer\">\r\n    {children}\r\n  </div>\r\n","import React from \"react\";\r\nimport {Highlight,} from 'react-instantsearch-dom';\r\n\r\n\r\nconst ProductItem = ({item}) => {\r\n  console.log(item);\r\n  const icons = [];\r\n  for (let i = 0; i < 5; i++) {\r\n    const suffixClassName = i >= item.rating ? '--empty' : '';\r\n    const suffixXlink = i >= item.rating ? 'Empty' : '';\r\n\r\n    icons.push(\r\n      <svg\r\n        key={i}\r\n        className={`ais-RatingMenu-starIcon ais-RatingMenu-starIcon${suffixClassName}`}\r\n        aria-hidden=\"true\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n      >\r\n        <use xlinkHref={`#ais-RatingMenu-star${suffixXlink}Symbol`}/>\r\n      </svg>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"gx-product-item gx-product-vertical\">\r\n      <div className=\"gx-product-image\">\r\n        <img\r\n          src={`https://res.cloudinary.com/hilnmyskv/image/fetch/h_300,q_100,f_auto/${\r\n            item.image\r\n            }`} alt=''\r\n        />\r\n      </div>\r\n      <div className=\"gx-product-body\">\r\n\r\n        <div className=\"gx-product-name\">\r\n          <Highlight attribute=\"name\" hit={item}/>\r\n        </div>\r\n        <div className=\"gx-mb-3\">\r\n          <Highlight attribute=\"type\" hit={item}/>\r\n        </div>\r\n        <div className=\"ais-RatingMenu-link\">{icons}</div>\r\n        <div className=\"gx-product-price\">${item.price}</div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductItem;\r\n","import React from 'react';\r\nimport {Col, Row} from 'antd';\r\n\r\nimport ProductItem from './ProductItem';\r\n\r\nconst ProductList = ({hits}) => {\r\n  return (\r\n    <div id=\"product\">\r\n      <Row>\r\n        {hits.map(product => (\r\n          <Col xl={8} lg={12} md={12} sm={12} xs={24}>\r\n            <ProductItem item={product} key={product.objectID}/>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default ProductList;\r\n","import React from 'react';\r\nimport {Layout} from \"antd\";\r\nimport {Configure, connectHits, connectStateResults, InstantSearch, Pagination, Stats,} from 'react-instantsearch-dom';\r\nimport {withUrlSync} from './urlSync';\r\nimport 'instantsearch.css/themes/algolia.css';\r\n//import './style.css'\r\nimport Header from \"./Header\";\r\nimport Sidebar from \"./SideBar\";\r\nimport Footer from \"./Footer\";\r\nimport ProductList from \"./ProductList\";\r\nimport algoliasearch from 'algoliasearch/lite';\r\n\r\nconst {Content} = Layout;\r\n\r\nconst searchClient = algoliasearch(\r\n  'latency',\r\n  '6be0576ff61c053d5f9a3225e2a90f76'\r\n);\r\n\r\nconst App = props => (\r\n  <InstantSearch className=\"gx-main-content\"\r\n                 indexName=\"ikea\"\r\n                 searchState={props.searchState}\r\n                 createURL={props.createURL}\r\n                 searchClient={searchClient}\r\n                 onSearchStateChange={props.onSearchStateChange}>\r\n\r\n    <Configure hitsPerPage={16}/>\r\n\r\n    <Layout className=\"gx-algolia-layout-has-sider\">\r\n      <Sidebar/>\r\n      <div className=\"gx-algolia-main\">\r\n        <Header/>\r\n        <Content className=\"gx-algolia-content\">\r\n          <CustomResults/>\r\n        </Content>\r\n        <Footer>\r\n          <Pagination showLast={true}/>\r\n        </Footer>\r\n      </div>\r\n    </Layout>\r\n  </InstantSearch>\r\n);\r\n\r\n\r\nconst CustomResults = connectStateResults(({searchState, searchResult}) => {\r\n  if (searchResult && searchResult.nbHits === 0) {\r\n    return (\r\n      <div className=\"gx-algolia-content-inner\">\r\n        <div className=\"gx-algolia-no-results\">\r\n          No results found matching{' '}\r\n          <span className=\"gx-algolia-query\">{searchState.query}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"gx-algolia-content-inner\">\r\n        <Stats/>\r\n        <ConnectedProducts/>\r\n      </div>\r\n    );\r\n  }\r\n});\r\n\r\nconst ConnectedProducts = connectHits(ProductList);\r\n\r\nexport default withUrlSync(App);\r\n"],"sourceRoot":""}