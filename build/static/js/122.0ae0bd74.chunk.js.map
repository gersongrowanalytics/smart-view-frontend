{"version":3,"sources":["routes/components/dataEntry/Transfer/Basic.js","routes/components/dataEntry/Transfer/Search.js","routes/components/dataEntry/Transfer/Advance.js","routes/components/dataEntry/Transfer/CustomData.js","routes/components/dataEntry/Transfer/index.js"],"names":["mockData","i","push","key","toString","title","description","disabled","targetKeys","filter","item","map","Basic","state","selectedKeys","handleChange","nextTargetKeys","direction","moveKeys","setState","console","log","handleSelectChange","sourceSelectedKeys","targetSelectedKeys","handleScroll","e","target","this","className","dataSource","titles","onChange","onSelectChange","onScroll","render","React","Component","Search","getMock","data","chosen","Math","random","filterOption","inputValue","option","indexOf","showSearch","Advance","renderFooter","size","style","float","margin","onClick","listStyle","width","height","operations","footer","CustomData","renderItem","label","value","Transfer","lg","md","sm","xs"],"mappings":"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","file":"static/js/122.0ae0bd74.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Card, Transfer} from \"antd\";\r\n\r\nconst mockData = [];\r\nfor (let i = 0; i < 20; i++) {\r\n  mockData.push({\r\n    key: i.toString(),\r\n    title: `content${i + 1}`,\r\n    description: `description of content${i + 1}`,\r\n    disabled: i % 3 < 1,\r\n  });\r\n}\r\n\r\nconst targetKeys = mockData\r\n  .filter(item => +item.key % 3 > 1)\r\n  .map(item => item.key);\r\n\r\nclass Basic extends React.Component {\r\n  state = {\r\n    targetKeys,\r\n    selectedKeys: [],\r\n  };\r\n\r\n  handleChange = (nextTargetKeys, direction, moveKeys) => {\r\n    this.setState({targetKeys: nextTargetKeys});\r\n\r\n    console.log('targetKeys: ', targetKeys);\r\n    console.log('direction: ', direction);\r\n    console.log('moveKeys: ', moveKeys);\r\n  };\r\n\r\n  handleSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\r\n    this.setState({selectedKeys: [...sourceSelectedKeys, ...targetSelectedKeys]});\r\n\r\n    console.log('sourceSelectedKeys: ', sourceSelectedKeys);\r\n    console.log('targetSelectedKeys: ', targetSelectedKeys);\r\n  };\r\n\r\n  handleScroll = (direction, e) => {\r\n    console.log('direction:', direction);\r\n    console.log('target:', e.target);\r\n  };\r\n\r\n  render() {\r\n    const state = this.state;\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Basic\">\r\n        <Transfer\r\n          dataSource={mockData}\r\n          titles={['Source', 'Target']}\r\n          targetKeys={state.targetKeys}\r\n          selectedKeys={state.selectedKeys}\r\n          onChange={this.handleChange}\r\n          onSelectChange={this.handleSelectChange}\r\n          onScroll={this.handleScroll}\r\n          render={item => item.title}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Basic;\r\n","import React from \"react\";\r\nimport {Card, Transfer} from \"antd\";\r\n\r\nclass Search extends React.Component {\r\n  state = {\r\n    mockData: [],\r\n    targetKeys: [],\r\n  };\r\n  getMock = () => {\r\n    const targetKeys = [];\r\n    const mockData = [];\r\n    for (let i = 0; i < 20; i++) {\r\n      const data = {\r\n        key: i.toString(),\r\n        title: `content${i + 1}`,\r\n        description: `description of content${i + 1}`,\r\n        chosen: Math.random() * 2 > 1,\r\n      };\r\n      if (data.chosen) {\r\n        targetKeys.push(data.key);\r\n      }\r\n      mockData.push(data);\r\n    }\r\n    this.setState({mockData, targetKeys});\r\n  };\r\n  filterOption = (inputValue, option) => {\r\n    return option.description.indexOf(inputValue) > -1;\r\n  };\r\n  handleChange = (targetKeys) => {\r\n    this.setState({targetKeys});\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMock();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Search\">\r\n        <Transfer\r\n          dataSource={this.state.mockData}\r\n          showSearch\r\n          filterOption={this.filterOption}\r\n          targetKeys={this.state.targetKeys}\r\n          onChange={this.handleChange}\r\n          render={item => item.title}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport {Button, Card, Transfer} from \"antd\";\r\n\r\nclass Advance extends React.Component {\r\n  state = {\r\n    mockData: [],\r\n    targetKeys: [],\r\n  };\r\n  getMock = () => {\r\n    const targetKeys = [];\r\n    const mockData = [];\r\n    for (let i = 0; i < 20; i++) {\r\n      const data = {\r\n        key: i.toString(),\r\n        title: `content${i + 1}`,\r\n        description: `description of content${i + 1}`,\r\n        chosen: Math.random() * 2 > 1,\r\n      };\r\n      if (data.chosen) {\r\n        targetKeys.push(data.key);\r\n      }\r\n      mockData.push(data);\r\n    }\r\n    this.setState({mockData, targetKeys});\r\n  };\r\n  handleChange = (targetKeys) => {\r\n    this.setState({targetKeys});\r\n  };\r\n  renderFooter = () => {\r\n    return (\r\n      <Button\r\n        size=\"small\"\r\n        style={{float: 'right', margin: 5}}\r\n        onClick={this.getMock}\r\n      >\r\n        reload\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMock();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Advance\">\r\n        <Transfer className=\"gx-ant-transfer-width\"\r\n                  dataSource={this.state.mockData}\r\n                  showSearch\r\n                  listStyle={{\r\n                    width: 250,\r\n                    height: 300,\r\n                  }}\r\n                  operations={['to right', 'to left']}\r\n                  targetKeys={this.state.targetKeys}\r\n                  onChange={this.handleChange}\r\n                  render={item => `${item.title}-${item.description}`}\r\n                  footer={this.renderFooter}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Advance;\r\n","import React from \"react\";\r\nimport {Card, Transfer} from \"antd\";\r\n\r\nclass CustomData extends React.Component {\r\n  state = {\r\n    mockData: [],\r\n    targetKeys: [],\r\n  };\r\n  getMock = () => {\r\n    const targetKeys = [];\r\n    const mockData = [];\r\n    for (let i = 0; i < 20; i++) {\r\n      const data = {\r\n        key: i.toString(),\r\n        title: `content${i + 1}`,\r\n        description: `description of content${i + 1}`,\r\n        chosen: Math.random() * 2 > 1,\r\n      };\r\n      if (data.chosen) {\r\n        targetKeys.push(data.key);\r\n      }\r\n      mockData.push(data);\r\n    }\r\n    this.setState({mockData, targetKeys});\r\n  };\r\n  handleChange = (targetKeys, direction, moveKeys) => {\r\n    console.log(targetKeys, direction, moveKeys);\r\n    this.setState({targetKeys});\r\n  };\r\n  renderItem = (item) => {\r\n    const customLabel = (\r\n      <span className=\"custom-item\">\r\n        {item.title} - {item.description}\r\n      </span>\r\n    );\r\n\r\n    return {\r\n      label: customLabel, // for displayed item\r\n      value: item.title, // for title and filter matching\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMock();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"CustomData\">\r\n        <Transfer className=\"gx-ant-transfer-width\"\r\n                  dataSource={this.state.mockData}\r\n                  listStyle={{\r\n                    width: 300,\r\n                    height: 300,\r\n                  }}\r\n                  targetKeys={this.state.targetKeys}\r\n                  onChange={this.handleChange}\r\n                  render={this.renderItem}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomData;\r\n","import React, {Component} from \"react\";\r\nimport {Col, Row} from \"antd\";\r\n\r\nimport Basic from \"./Basic\";\r\nimport Search from \"./Search\";\r\nimport Advance from \"./Advance\";\r\nimport CustomData from \"./CustomData\";\r\n\r\n\r\nclass Transfer extends Component {\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col lg={24} md={24} sm={24} xs={24}>\r\n          <Advance/>\r\n        </Col>\r\n        <Col lg={24} md={24} sm={24} xs={24}>\r\n          <CustomData/>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Basic/>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Search/>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Transfer;\r\n"],"sourceRoot":""}