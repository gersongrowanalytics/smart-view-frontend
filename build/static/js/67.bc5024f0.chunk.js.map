{"version":3,"sources":["routes/components/dataEntry/Form/Basic.js","routes/components/dataEntry/Form/HorizontalLoginForm.js","routes/components/dataEntry/Form/Registration.js","routes/components/dataEntry/Form/AdvancedSearch.js","routes/components/dataEntry/Form/DynamicFormItem.js","routes/components/dataEntry/Form/TimeRelatedControls.js","routes/components/dataEntry/Form/CustomizedFormControls.js","routes/components/dataEntry/Form/StoreFormData.js","routes/components/dataEntry/Form/CustomizedValidation.js","routes/components/dataEntry/Form/CoordinatedControls.js","routes/components/dataEntry/Form/FormLayout.js","routes/components/dataEntry/Form/DynamicRules.js","routes/components/dataEntry/Form/OtherFormControls.js","routes/components/dataEntry/Form/index.js"],"names":["FormItem","Form","Item","Basic","onFinishFailed","errorInfo","console","log","onFinish","values","className","title","initialValues","remember","name","this","layout","rules","required","message","prefix","style","color","placeholder","type","htmlType","Component","HorizontalLoginForm","state","email","password","props","showMessage","loader","alertMessage","initialValue","valuePropName","CircularProgress","error","connect","auth","authUser","userSignIn","hideMessage","showAuthLoader","userFacebookSignIn","userGoogleSignIn","userGithubSignIn","userTwitterSignIn","Option","Select","residences","AutoComplete","value","label","children","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Registration","useForm","form","prefixSelector","noStyle","width","useState","autoCompleteResult","setAutoCompleteResult","websiteOptions","map","website","residence","scrollToFirstError","hasFeedback","Password","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","QuestionCircleOutlined","whitespace","options","addonBefore","onChange","domain","extra","gutter","_","href","AdvancedSearch","expand","setExpand","count","i","push","lg","md","key","display","getFields","textAlign","onClick","resetFields","verticalAlign","marginBottom","UpOutlined","DownOutlined","formItemLayoutWithOutLabel","DynamicFormItem","List","fields","add","remove","field","index","validateTrigger","length","MinusCircleOutlined","margin","PlusOutlined","MonthPicker","DatePicker","RangePicker","config","rangeConfig","TimeRelatedControls","fieldsValue","rangeValue","rangeTimeValue","format","showTime","PriceInput","number","setNumber","currency","setCurrency","triggerChange","changedValue","e","newNumber","parseInt","target","Number","isNaN","marginRight","newCurrency","CustomizedFormControls","price","CustomizedForm","onFieldsChange","changedFields","allFields","StoreFormData","setFields","newFields","JSON","stringify","CustomizedValidation","validateStatus","help","id","SmileOutlined","allowClear","tailLayout","CoordinatedControls","setFieldsValue","note","shouldUpdate","prevValues","currentValues","gender","FormLayout","formLayout","setFormLayout","buttonItemLayout","onValuesChange","Group","Button","formTailLayout","DynamicRules","checkNick","setCheckNick","useEffect","validateFields","onCheck","a","checked","normFile","Array","isArray","fileList","OtherFormControls","rate","mode","min","max","marks","0","20","40","60","80","100","lineHeight","disabled","getValueFromEvent","action","listType","UploadOutlined","Dragger","InboxOutlined"],"mappings":"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","file":"static/js/67.bc5024f0.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Button, Card, Form, Input} from \"antd\";\r\nimport Icon from '@ant-design/icons';\r\nimport UserOutlined from \"@ant-design/icons/lib/icons/UserOutlined\";\r\nimport LockOutlined from \"@ant-design/icons/lib/icons/LockOutlined\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nfunction hasErrors(fieldsError) {\r\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nclass Basic extends Component {\r\n\r\n\r\n   onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n   onFinish = values => {\r\n    console.log('Received values of form: ', values);\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Basic\">\r\n        <Form\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          onFinish={this.onFinish}\r\n          onFinishFailed={this.onFinishFailed}\r\n          layout=\"inline\">\r\n\r\n          <FormItem rules={[{ required: true, message: 'Please input your username!\\'}' }]} name=\"uaername\">\r\n\r\n            <Input prefix={<UserOutlined style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                   placeholder=\"Username\"/>\r\n          </FormItem>\r\n\r\n          <FormItem rules= {[{required: true, message: 'Please input your Password!'}]}  name=\"password\">\r\n          <Input prefix={<LockOutlined style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                 type=\"password\"\r\n                 placeholder=\"Password\"/>\r\n        </FormItem>\r\n          <FormItem>\r\n            <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n              Log in\r\n            </Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Basic;\r\n\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Button, Card, Checkbox, Form, Input, message} from \"antd\";\r\nimport Icon from '@ant-design/icons';\r\nimport {\r\n  hideMessage,\r\n  showAuthLoader,\r\n  userFacebookSignIn,\r\n  userGithubSignIn,\r\n  userGoogleSignIn,\r\n  userSignIn,\r\n  userTwitterSignIn\r\n} from \"appRedux/actions/Auth\";\r\nimport \"./horizontalLoginForm.less\";\r\nimport CircularProgress from \"components/CircularProgress/index\";\r\nimport {UserOutlined,LockOutlined} from \"@ant-design/icons\";\r\n\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass HorizontalLoginForm extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: 'demo@example.com',\r\n      password: 'demo#123'\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const {showMessage, loader, alertMessage} = this.props;\r\n\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Horizontal Login Form\">\r\n        <Form\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          onFinish={this.onFinish}\r\n          onFinishFailed={this.onFinishFailed}\r\n          className=\"gx-login-form gx-form-row0\">\r\n          <FormItem rules={[{ required: true, message: 'Please input your E-mail!' }]}\r\n                    name=\"email\"\r\n                    initialValue=\"demo@example.com\">\r\n\r\n            <Input prefix={<UserOutlined style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                   placeholder=\"Email\"/>\r\n          </FormItem>\r\n          <FormItem rules= {[{required: true, message: 'Please input your Password!'}]}\r\n                    name=\"password\"\r\n                    initialValue=\"demo#123\">\r\n\r\n            <Input prefix={<LockOutlined style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                   type=\"password\"\r\n                   placeholder=\"Password\"/>\r\n          </FormItem>\r\n          <FormItem  name=\"remember\" valuePropName=\"checked\">\r\n            <span className='gx-d-block gx-mb-2'>\r\n              <Checkbox>Remember me</Checkbox>\r\n            <span className=\"gx-link login-form-forgot\">Forgot password</span>\r\n            </span>\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button gx-mt-1\">\r\n              Log in\r\n            </Button>\r\n            <span className='gx-d-block gx-mt-2'>\r\n            Or <span className=\"gx-link\">register now!</span>\r\n            </span>\r\n          </FormItem>\r\n        </Form>\r\n\r\n        {loader &&\r\n        <div className=\"gx-loader-view\">\r\n          <CircularProgress/>\r\n        </div>\r\n        }\r\n        {showMessage &&\r\n        message.error(alertMessage)}\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = ({auth}) => {\r\n  const {loader, alertMessage, showMessage, authUser} = auth;\r\n  return {loader, alertMessage, showMessage, authUser}\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  userSignIn,\r\n  hideMessage,\r\n  showAuthLoader,\r\n  userFacebookSignIn,\r\n  userGoogleSignIn,\r\n  userGithubSignIn,\r\n  userTwitterSignIn\r\n})(HorizontalLoginForm);\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Cascader,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  Card,\r\n  AutoComplete,\r\n} from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\n\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nconst residences = [\r\n  {\r\n    value: 'zhejiang',\r\n    label: 'Zhejiang',\r\n    children: [\r\n      {\r\n        value: 'hangzhou',\r\n        label: 'Hangzhou',\r\n        children: [\r\n          {\r\n            value: 'xihu',\r\n            label: 'West Lake',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    value: 'jiangsu',\r\n    label: 'Jiangsu',\r\n    children: [\r\n      {\r\n        value: 'nanjing',\r\n        label: 'Nanjing',\r\n        children: [\r\n          {\r\n            value: 'zhonghuamen',\r\n            label: 'Zhong Hua Men',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst Registration = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = values => {\r\n    console.log('Received values of form: ', values);\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select style={{ width: 70 }}>\r\n        <Option value=\"86\">+86</Option>\r\n        <Option value=\"87\">+87</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n  const [autoCompleteResult, setAutoCompleteResult] = useState([]);\r\n\r\n  const onWebsiteChange = value => {\r\n    if (!value) {\r\n      setAutoCompleteResult([]);\r\n    } else {\r\n      setAutoCompleteResult(['.com', '.org', '.net'].map(domain => `${value}${domain}`));\r\n    }\r\n  };\r\n\r\n  const websiteOptions = autoCompleteResult.map(website => ({\r\n    label: website,\r\n    value: website,\r\n  }));\r\n\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Registration Form\">\r\n    <Form\r\n      {...formItemLayout}\r\n      form={form}\r\n      name=\"register\"\r\n      onFinish={onFinish}\r\n      initialValues={{\r\n        residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n        prefix: '86',\r\n      }}\r\n      scrollToFirstError\r\n    >\r\n      <Form.Item\r\n        name=\"email\"\r\n        label=\"E-mail\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: 'Please input your E-mail!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"confirm\"\r\n        label=\"Confirm Password\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please confirm your password!',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(rule, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve();\r\n              }\r\n              return Promise.reject('The two passwords that you entered do not match!');\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"nickname\"\r\n        label={\r\n          <span>\r\n            Nickname&nbsp;\r\n            <Tooltip title=\"What do you want others to call you?\">\r\n              <QuestionCircleOutlined />\r\n            </Tooltip>\r\n          </span>\r\n        }\r\n        rules={[{ required: true, message: 'Please input your nickname!', whitespace: true }]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"residence\"\r\n        label=\"Habitual Residence\"\r\n        rules={[\r\n          { type: 'array', required: true, message: 'Please select your habitual residence!' },\r\n        ]}\r\n      >\r\n        <Cascader options={residences} />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"phone\"\r\n        label=\"Phone Number\"\r\n        rules={[{ required: true, message: 'Please input your phone number!' }]}\r\n      >\r\n        <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"website\"\r\n        label=\"Website\"\r\n        rules={[{ required: true, message: 'Please input website!' }]}\r\n      >\r\n        <AutoComplete options={websiteOptions} onChange={onWebsiteChange} placeholder=\"website\">\r\n          <Input />\r\n        </AutoComplete>\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\r\n        <Row gutter={8}>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              name=\"captcha\"\r\n              noStyle\r\n              rules={[{ required: true, message: 'Please input the captcha you got!' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Button>Get captcha</Button>\r\n          </Col>\r\n        </Row>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"agreement\"\r\n        valuePropName=\"checked\"\r\n        rules={[\r\n          { validator:(_, value) => value ? Promise.resolve() : Promise.reject('Should accept agreement') },\r\n        ]}\r\n        {...tailFormItemLayout}\r\n      >\r\n        <Checkbox>\r\n          I have read the <a href=\"\">agreement</a>\r\n        </Checkbox>\r\n      </Form.Item>\r\n      <Form.Item {...tailFormItemLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Register\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport  default Registration;\r\n\r\n","import React, { useState } from 'react';\r\nimport { Form, Row, Col, Input, Button ,Card} from 'antd';\r\nimport { DownOutlined, UpOutlined } from '@ant-design/icons';\r\n\r\nconst AdvancedSearch = () => {\r\n  const [expand, setExpand] = useState(false);\r\n  const [form] = Form.useForm();\r\n\r\n  const getFields = () => {\r\n    const count = expand ? 10 : 6;\r\n    const children = [];\r\n    for (let i = 0; i < count; i++) {\r\n      children.push(\r\n        <Col lg={8} md={8} sm={12} xs={24} key={i} style={{display: i < count ? 'block' : 'none'}}>\r\n          <div className=\"gx-form-row0\">\r\n            <Form.Item\r\n              name={`field-${i}`}\r\n              label={`Field ${i}`}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Input something!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"placeholder\" />\r\n            </Form.Item>\r\n          </div>\r\n        </Col>,\r\n      );\r\n    }\r\n    return children;\r\n  };\r\n\r\n  const onFinish = values => {\r\n    console.log('Received values of form: ', values);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Advanced Search\">\r\n    <Form\r\n      form={form}\r\n      name=\"advanced_search\"\r\n      className=\"ant-advanced-search-form\"\r\n      onFinish={onFinish}\r\n    >\r\n      <Row gutter={24}>{getFields()}</Row>\r\n      <Row>\r\n        <Col span={24} style={{ textAlign: 'right' }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              form.resetFields();\r\n            }}\r\n          >\r\n            Clear\r\n          </Button>\r\n          <a\r\n            style={{ display: 'inline-block', verticalAlign: 'middle', marginBottom: 15, }}\r\n            onClick={() => {\r\n              setExpand(!expand);\r\n            }}\r\n          >\r\n            {expand ? <UpOutlined /> : <DownOutlined />} Collapse\r\n          </a>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AdvancedSearch;\r\n","import { Form, Input, Button ,Card} from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React from \"react\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 20 },\r\n  },\r\n};\r\nconst formItemLayoutWithOutLabel = {\r\n  wrapperCol: {\r\n    xs: { span: 24, offset: 0 },\r\n    sm: { span: 20, offset: 4 },\r\n  },\r\n};\r\n\r\nconst DynamicFormItem = () => {\r\n  const onFinish = values => {\r\n    console.log('Received values of form:', values);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Dynamic Form Item\">\r\n    <Form name=\"dynamic_form_item\" {...formItemLayoutWithOutLabel} onFinish={onFinish}>\r\n      <Form.List name=\"names\">\r\n        {(fields, { add, remove }) => {\r\n          return (\r\n            <div>\r\n              {fields.map((field, index) => (\r\n                <Form.Item\r\n                  {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n                  label={index === 0 ? 'Passengers' : ''}\r\n                  required={false}\r\n                  key={field.key}\r\n                >\r\n                  <Form.Item\r\n                    {...field}\r\n                    validateTrigger={['onChange', 'onBlur']}\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        whitespace: true,\r\n                        message: \"Please input passenger's name or delete this field.\",\r\n                      },\r\n                    ]}\r\n                    noStyle\r\n                  >\r\n                    <Input placeholder=\"passenger name\" style={{ width: '60%' }} />\r\n                  </Form.Item>\r\n                  {fields.length > 1 ? (\r\n                    <MinusCircleOutlined\r\n                      className=\"dynamic-delete-button\"\r\n                      style={{ margin: '0 8px' }}\r\n                      onClick={() => {\r\n                        remove(field.name);\r\n                      }}\r\n                    />\r\n                  ) : null}\r\n                </Form.Item>\r\n              ))}\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"dashed\"\r\n                  onClick={() => {\r\n                    add();\r\n                  }}\r\n                  style={{ width: '60%' }}\r\n                >\r\n                  <PlusOutlined /> Add field\r\n                </Button>\r\n              </Form.Item>\r\n            </div>\r\n          );\r\n        }}\r\n      </Form.List>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Card>\r\n  );\r\n};\r\nexport  default  DynamicFormItem;\r\n","import React from \"react\";\r\nimport { Form, DatePicker, TimePicker, Button ,Card} from 'antd';\r\n\r\nconst { MonthPicker, RangePicker } = DatePicker;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst config = {\r\n  rules: [{ type: 'object', required: true, message: 'Please select time!' }],\r\n};\r\nconst rangeConfig = {\r\n  rules: [{ type: 'array', required: true, message: 'Please select time!' }],\r\n};\r\n\r\nconst TimeRelatedControls = () => {\r\n  const onFinish = fieldsValue => {\r\n    // Should format date value before submit.\r\n    const rangeValue = fieldsValue['range-picker'];\r\n    const rangeTimeValue = fieldsValue['range-time-picker'];\r\n    const values = {\r\n      ...fieldsValue,\r\n      'date-picker': fieldsValue['date-picker'].format('YYYY-MM-DD'),\r\n      'date-time-picker': fieldsValue['date-time-picker'].format('YYYY-MM-DD HH:mm:ss'),\r\n      'month-picker': fieldsValue['month-picker'].format('YYYY-MM'),\r\n      'range-picker': [rangeValue[0].format('YYYY-MM-DD'), rangeValue[1].format('YYYY-MM-DD')],\r\n      'range-time-picker': [\r\n        rangeTimeValue[0].format('YYYY-MM-DD HH:mm:ss'),\r\n        rangeTimeValue[1].format('YYYY-MM-DD HH:mm:ss'),\r\n      ],\r\n      'time-picker': fieldsValue['time-picker'].format('HH:mm:ss'),\r\n    };\r\n    console.log('Received values of form: ', values);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Time Related Controls\">\r\n    <Form name=\"time_related_controls\" {...formItemLayout} onFinish={onFinish}>\r\n      <Form.Item name=\"date-picker\" label=\"DatePicker\" {...config}>\r\n        <DatePicker className='gx-mb-3 gx-w-100' />\r\n      </Form.Item>\r\n      <Form.Item name=\"date-time-picker\" label=\"DatePicker[showTime]\" {...config}>\r\n        <DatePicker className='gx-mb-3 gx-w-100' showTime format=\"YYYY-MM-DD HH:mm:ss\" />\r\n      </Form.Item>\r\n      <Form.Item name=\"month-picker\" label=\"MonthPicker\" {...config}>\r\n        <MonthPicker className='gx-mb-3 gx-w-100' />\r\n      </Form.Item>\r\n      <Form.Item name=\"range-picker\" label=\"RangePicker\" {...rangeConfig}>\r\n        <RangePicker className='gx-mb-3 gx-w-100' />\r\n      </Form.Item>\r\n      <Form.Item name=\"range-time-picker\" label=\"RangePicker[showTime]\" {...rangeConfig}>\r\n        <RangePicker className='gx-mb-3 gx-w-100' showTime format=\"YYYY-MM-DD HH:mm:ss\" />\r\n      </Form.Item>\r\n      <Form.Item name=\"time-picker\" label=\"TimePicker\" {...config}>\r\n        <TimePicker className='gx-mb-3 gx-w-100' />\r\n      </Form.Item>\r\n      <Form.Item\r\n        wrapperCol={{\r\n          xs: { span: 24, offset: 0 },\r\n          sm: { span: 16, offset: 8 },\r\n        }}\r\n      >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Card>\r\n  );\r\n};\r\nexport default TimeRelatedControls;\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, Select, Button ,Card} from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nconst PriceInput = ({ value = {}, onChange }) => {\r\n  const [number, setNumber] = useState(0);\r\n  const [currency, setCurrency] = useState('rmb');\r\n\r\n  const triggerChange = changedValue => {\r\n    if (onChange) {\r\n      onChange({\r\n        number,\r\n        currency,\r\n        ...value,\r\n        ...changedValue,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onNumberChange = e => {\r\n    const newNumber = parseInt(e.target.value || 0, 10);\r\n\r\n    if (Number.isNaN(number)) {\r\n      return;\r\n    }\r\n\r\n    if (!('number' in value)) {\r\n      setNumber(newNumber);\r\n    }\r\n\r\n    triggerChange({\r\n      number: newNumber,\r\n    });\r\n  };\r\n\r\n  const onCurrencyChange = newCurrency => {\r\n    if (!('currency' in value)) {\r\n      setCurrency(newCurrency);\r\n    }\r\n\r\n    triggerChange({\r\n      currency: newCurrency,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <span>\r\n      <Input\r\n        type=\"text\"\r\n        value={value.number || number}\r\n        onChange={onNumberChange}\r\n        style={{\r\n          width: '63%',\r\n          marginRight: '5%'\r\n        }}\r\n      />\r\n      <Select\r\n        value={value.currency || currency}\r\n        style={{\r\n          width: '32%',\r\n        }}\r\n        onChange={onCurrencyChange}\r\n      >\r\n        <Option value=\"rmb\">RMB</Option>\r\n        <Option value=\"dollar\">Dollar</Option>\r\n      </Select>\r\n    </span>\r\n  );\r\n};\r\n\r\nconst CustomizedFormControls = () => {\r\n  const onFinish = values => {\r\n    console.log('Received values from form: ', values);\r\n  };\r\n\r\n  const checkPrice = (rule, value) => {\r\n    if (value.number > 0) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    return Promise.reject('Price must be greater than zero!');\r\n  };\r\n\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Customized Form Controls\">\r\n    <Form\r\n      name=\"customized_form_controls\"\r\n      layout=\"inline\"\r\n      onFinish={onFinish}\r\n      initialValues={{\r\n        price: {\r\n          number: 0,\r\n          currency: 'rmb',\r\n        },\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name=\"price\"\r\n        label=\"Price\"\r\n        rules={[\r\n          {\r\n            validator: checkPrice,\r\n          },\r\n        ]}\r\n      >\r\n        <PriceInput />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Card>\r\n  );\r\n};\r\nexport default CustomizedFormControls;\r\n","import React, { useState } from 'react';\r\nimport { Form, Input,Card } from 'antd';\r\n\r\nconst CustomizedForm = ({ onChange, fields }) => (\r\n  <Form\r\n    name=\"global_state\"\r\n    layout=\"inline\"\r\n    fields={fields}\r\n    onFieldsChange={(changedFields, allFields) => {\r\n      onChange(allFields);\r\n    }}\r\n  >\r\n    <Form.Item\r\n      name=\"username\"\r\n      label=\"Username\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Username is required!',\r\n        },\r\n      ]}\r\n    >\r\n      <Input />\r\n    </Form.Item>\r\n  </Form>\r\n);\r\n\r\nconst StoreFormData = () => {\r\n  const [fields, setFields] = useState([\r\n    {\r\n      name: ['username'],\r\n      value: 'Ant Design',\r\n    },\r\n  ]);\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Store Form Data\">\r\n      <CustomizedForm\r\n        fields={fields}\r\n        onChange={newFields => {\r\n          setFields(newFields);\r\n        }}\r\n      />\r\n      <pre className=\"language-bash\">{JSON.stringify(fields, null, 2)}</pre>\r\n    </Card>\r\n  );\r\n};\r\nexport default StoreFormData;\r\n","import { SmileOutlined } from '@ant-design/icons';\r\nimport {Form, Input, DatePicker, TimePicker, Select, Cascader, InputNumber, Card, Col} from 'antd';\r\nimport React from \"react\";\r\n\r\nconst FormItem = Form.Item;\r\nconst { Option } = Select;\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {span: 24},\r\n    sm: {span: 5},\r\n  },\r\n  wrapperCol: {\r\n    xs: {span: 24},\r\n    sm: {span: 18},\r\n    md: {span: 16},\r\n    lg: {span: 12},\r\n  },\r\n};\r\n\r\nconst CustomizedValidation = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title=\"CUSTOMIZED VALIDATION\">\r\n    <Form>\r\n      <Form.Item {...formItemLayout}\r\n        label=\"Fail\"\r\n        validateStatus=\"error\"\r\n        help=\"Should be combination of numbers & alphabets\"\r\n      >\r\n        <Input placeholder=\"unavailable choice\" id=\"error\"/>\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Warning\" validateStatus=\"warning\" {...formItemLayout}>\r\n        <Input placeholder=\"Warning\" id=\"warning\" prefix={<SmileOutlined/>}/>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...formItemLayout}\r\n        label=\"Validating\"\r\n        hasFeedback\r\n        validateStatus=\"validating\"\r\n        help=\"The information is being validated...\"\r\n      >\r\n        <Input placeholder=\"I'm the content is being validated\" id=\"validating\"/>\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Success\" hasFeedback validateStatus=\"success\" {...formItemLayout}>\r\n        <Input placeholder=\"I'm the content\" id=\"success\"/>\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Warning\" hasFeedback validateStatus=\"warning\" {...formItemLayout}>\r\n        <Input placeholder=\"Warning\" id=\"warning2\"/>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...formItemLayout}\r\n        label=\"Fail\"\r\n        hasFeedback\r\n        validateStatus=\"error\"\r\n        help=\"Should be combination of numbers & alphabets\"\r\n      >\r\n        <Input placeholder=\"unavailable choice\" id=\"error2\"/>\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Success\" hasFeedback validateStatus=\"success\" {...formItemLayout}>\r\n        <DatePicker\r\n          style={{\r\n            width: '100%',\r\n          }}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Warning\" hasFeedback validateStatus=\"warning\" {...formItemLayout}>\r\n        <TimePicker\r\n          style={{\r\n            width: '100%',\r\n          }}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Error\" hasFeedback validateStatus=\"error\" {...formItemLayout}>\r\n        <Select>\r\n          <Option value=\"1\">Option 1</Option>\r\n          <Option value=\"2\">Option 2</Option>\r\n          <Option value=\"3\">Option 3</Option>\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...formItemLayout}\r\n        label=\"Validating\"\r\n        hasFeedback\r\n        validateStatus=\"validating\"\r\n        help=\"The information is being validated...\"\r\n      >\r\n        <Cascader options={[]}/>\r\n      </Form.Item>\r\n\r\n      <FormItem\r\n        label=\"inline\"\r\n        {...formItemLayout}\r\n      >\r\n\r\n        <div className=\"ant-row gx-form-row0\">\r\n          <Col xs={24} sm={11}>\r\n            <FormItem validateStatus=\"error\" help=\"Please select the correct date\">\r\n              <DatePicker/>\r\n            </FormItem>\r\n          </Col>\r\n          <Col xs={24} sm={2}>\r\n          <span style={{display: 'inline-block', width: '100%', textAlign: 'center'}}>\r\n            -\r\n          </span>\r\n          </Col>\r\n          <Col xs={24} sm={11}>\r\n            <FormItem>\r\n              <DatePicker/>\r\n            </FormItem>\r\n          </Col>\r\n        </div>\r\n      </FormItem>\r\n\r\n      <Form.Item label=\"Success\" hasFeedback validateStatus=\"success\" {...formItemLayout}>\r\n        <InputNumber\r\n          style={{\r\n            width: '100%',\r\n          }}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Success\" hasFeedback validateStatus=\"success\" {...formItemLayout}>\r\n        <Input allowClear placeholder=\"with allowClear\"/>\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Warning\" hasFeedback validateStatus=\"warning\" {...formItemLayout}>\r\n        <Input.Password placeholder=\"with input password\"/>\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Error\" hasFeedback validateStatus=\"error\" {...formItemLayout}>\r\n        <Input.Password allowClear placeholder=\"with input password and allowClear\"/>\r\n      </Form.Item>\r\n    </Form>\r\n    </Card>\r\n  );\r\n}\r\nexport default CustomizedValidation;\r\n","import { Form, Input, Button, Select,Card } from 'antd';\r\nimport React from \"react\";\r\n\r\nconst { Option } = Select;\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst CoordinatedControls = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onGenderChange = value => {\r\n    switch (value) {\r\n      case 'male':\r\n        form.setFieldsValue({\r\n          note: 'Hi, man!',\r\n        });\r\n        return;\r\n\r\n      case 'female':\r\n        form.setFieldsValue({\r\n          note: 'Hi, lady!',\r\n        });\r\n        return;\r\n\r\n      case 'other':\r\n        form.setFieldsValue({\r\n          note: 'Hi there!',\r\n        });\r\n    }\r\n  };\r\n\r\n  const onFinish = values => {\r\n    console.log(values);\r\n  };\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFill = () => {\r\n    form.setFieldsValue({\r\n      note: 'Hello world!',\r\n      gender: 'male',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Coordinated Controls\">\r\n    <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\r\n      <Form.Item\r\n        name=\"note\"\r\n        label=\"Note\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"gender\"\r\n        label=\"Gender\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}\r\n      >\r\n        <Select\r\n          placeholder=\"Select a option and change input text above\"\r\n          onChange={onGenderChange}\r\n          allowClear\r\n        >\r\n          <Option value=\"male\">male</Option>\r\n          <Option value=\"female\">female</Option>\r\n          <Option value=\"other\">other</Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item\r\n        noStyle\r\n        shouldUpdate={(prevValues, currentValues) => prevValues.gender !== currentValues.gender}\r\n      >\r\n        {({ getFieldValue }) =>\r\n          getFieldValue('gender') === 'other' ? (\r\n            <Form.Item\r\n              name=\"customizeGender\"\r\n              label=\"Customize Gender\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n          ) : null\r\n        }\r\n      </Form.Item>\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n        <Button htmlType=\"button\" onClick={onReset}>\r\n          Reset\r\n        </Button>\r\n        <Button type=\"link\" htmlType=\"button\" onClick={onFill}>\r\n          Fill form\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Card>\r\n  );\r\n};\r\nexport default CoordinatedControls;\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, Button, Radio,Card } from 'antd';\r\n\r\nconst FormLayout = () => {\r\n  const [form] = Form.useForm();\r\n  const [formLayout, setFormLayout] = useState('horizontal');\r\n\r\n  const onFormLayoutChange = ({ layout }) => {\r\n    setFormLayout(layout);\r\n  };\r\n\r\n  const formItemLayout =\r\n    formLayout === 'horizontal'\r\n      ? {\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 6 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 14 },\r\n        },\r\n      }\r\n      : null;\r\n  const buttonItemLayout =\r\n    formLayout === 'horizontal'\r\n      ? {\r\n        wrapperCol: {\r\n          span: 14,\r\n          offset: 4,\r\n        },\r\n      }\r\n      : null;\r\n  return (\r\n    <Card className=\"gx-card\" title=\"FORM LAYOUT\">\r\n      <Form\r\n        {...formItemLayout}\r\n        layout={formLayout}\r\n        form={form}\r\n        initialValues={{\r\n          layout: formLayout,\r\n        }}\r\n        onValuesChange={onFormLayoutChange}\r\n      >\r\n        <Form.Item label=\"Form Layout\" name=\"layout\">\r\n          <Radio.Group value={formLayout}>\r\n            <Radio.Button value=\"horizontal\">Horizontal</Radio.Button>\r\n            <Radio.Button value=\"vertical\">Vertical</Radio.Button>\r\n            <Radio.Button value=\"inline\">Inline</Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n        <Form.Item label=\"Field A\">\r\n          <Input placeholder=\"input placeholder\" />\r\n        </Form.Item>\r\n        <Form.Item label=\"Field B\">\r\n          <Input placeholder=\"input placeholder\" />\r\n        </Form.Item>\r\n        <Form.Item {...buttonItemLayout}>\r\n          <Button type=\"primary\">Submit</Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FormLayout;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, Card, Checkbox, Form, Input} from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 6 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 14 },\r\n  },\r\n};\r\nconst formTailLayout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n    offset: 4,\r\n  },\r\n};\r\n\r\nconst DynamicRules = () => {\r\n  const [form] = Form.useForm();\r\n  const [checkNick, setCheckNick] = useState(false);\r\n  useEffect(() => {\r\n    form.validateFields(['nickname']);\r\n  }, [checkNick]);\r\n\r\n  const onCheckboxChange = e => {\r\n    setCheckNick(e.target.checked);\r\n  };\r\n\r\n  const onCheck = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      console.log('Success:', values);\r\n    } catch (errorInfo) {\r\n      console.log('Failed:', errorInfo);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"gx-card\" title=\"DYNAMIC RULES\">\r\n      <Form form={form} name=\"dynamic_rule\">\r\n        <Form.Item\r\n          {...formItemLayout}\r\n          name=\"username\"\r\n          label=\"Name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your name',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Please input your name\"/>\r\n        </Form.Item>\r\n        <Form.Item\r\n          {...formItemLayout}\r\n          name=\"nickname\"\r\n          label=\"Nickname\"\r\n          rules={[\r\n            {\r\n              required: checkNick,\r\n              message: 'Please input your nickname',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Please input your nickname\"/>\r\n        </Form.Item>\r\n        <Form.Item {...formTailLayout}>\r\n          <Checkbox checked={checkNick} onChange={onCheckboxChange}>\r\n            Nickname is required\r\n          </Checkbox>\r\n        </Form.Item>\r\n        <Form.Item {...formTailLayout}>\r\n          <Button type=\"primary\" onClick={onCheck}>\r\n            Check\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\nexport default DynamicRules;\r\n","import React from \"react\"\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Rate,\r\n  Checkbox,\r\n  Row,\r\n  Col,\r\n  Card\r\n} from 'antd';\r\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons';\r\n\r\nconst { Option } = Select;\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 14,\r\n  },\r\n};\r\n\r\nconst normFile = e => {\r\n  console.log('Upload event:', e);\r\n\r\n  if (Array.isArray(e)) {\r\n    return e;\r\n  }\r\n\r\n  return e && e.fileList;\r\n};\r\n\r\nconst OtherFormControls = () => {\r\n  const onFinish = values => {\r\n    console.log('Received values of form: ', values);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"gx-card\" title=\"OTHER FORM CONTROLS\">\r\n    <Form\r\n      name=\"validate_other\"\r\n      {...formItemLayout}\r\n      onFinish={onFinish}\r\n      initialValues={{\r\n        'input-number': 3,\r\n        'checkbox-group': ['A', 'B'],\r\n        rate: 3.5,\r\n      }}\r\n    >\r\n      <Form.Item label=\"Plain Text\">\r\n        <span className=\"ant-form-text\">China</span>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"select\"\r\n        label=\"Select\"\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please select your country!',\r\n          },\r\n        ]}\r\n      >\r\n        <Select placeholder=\"Please select a country\">\r\n          <Option value=\"china\">China</Option>\r\n          <Option value=\"usa\">U.S.A</Option>\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"select-multiple\"\r\n        label=\"Select[multiple]\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please select your favourite colors!',\r\n            type: 'array',\r\n          },\r\n        ]}\r\n      >\r\n        <Select mode=\"multiple\" placeholder=\"Please select favourite colors\">\r\n          <Option value=\"red\">Red</Option>\r\n          <Option value=\"green\">Green</Option>\r\n          <Option value=\"blue\">Blue</Option>\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"InputNumber\">\r\n        <Form.Item name=\"input-number\" noStyle>\r\n          <InputNumber min={1} max={10} />\r\n        </Form.Item>\r\n        <span className=\"ant-form-text\"> machines</span>\r\n      </Form.Item>\r\n\r\n      <Form.Item name=\"switch\" label=\"Switch\" valuePropName=\"checked\">\r\n        <Switch />\r\n      </Form.Item>\r\n\r\n      <Form.Item name=\"slider\" label=\"Slider\">\r\n        <Slider\r\n          marks={{\r\n            0: 'A',\r\n            20: 'B',\r\n            40: 'C',\r\n            60: 'D',\r\n            80: 'E',\r\n            100: 'F',\r\n          }}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item name=\"radio-group\" label=\"Radio.Group\">\r\n        <Radio.Group>\r\n          <Radio value=\"a\">item 1</Radio>\r\n          <Radio value=\"b\">item 2</Radio>\r\n          <Radio value=\"c\">item 3</Radio>\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n      <Form.Item name=\"radio-button\" label=\"Radio.Button\">\r\n        <Radio.Group>\r\n          <Radio.Button value=\"a\">item 1</Radio.Button>\r\n          <Radio.Button value=\"b\">item 2</Radio.Button>\r\n          <Radio.Button value=\"c\">item 3</Radio.Button>\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n      <Form.Item name=\"checkbox-group\" label=\"Checkbox.Group\">\r\n        <Checkbox.Group>\r\n          <Row>\r\n            <Col span={8}>\r\n              <Checkbox\r\n                value=\"A\"\r\n                style={{\r\n                  lineHeight: '32px',\r\n                }}\r\n              >\r\n                A\r\n              </Checkbox>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Checkbox\r\n                value=\"B\"\r\n                style={{\r\n                  lineHeight: '32px',\r\n                }}\r\n                disabled\r\n              >\r\n                B\r\n              </Checkbox>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Checkbox\r\n                value=\"C\"\r\n                style={{\r\n                  lineHeight: '32px',\r\n                }}\r\n              >\r\n                C\r\n              </Checkbox>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Checkbox\r\n                value=\"D\"\r\n                style={{\r\n                  lineHeight: '32px',\r\n                }}\r\n              >\r\n                D\r\n              </Checkbox>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Checkbox\r\n                value=\"E\"\r\n                style={{\r\n                  lineHeight: '32px',\r\n                }}\r\n              >\r\n                E\r\n              </Checkbox>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Checkbox\r\n                value=\"F\"\r\n                style={{\r\n                  lineHeight: '32px',\r\n                }}\r\n              >\r\n                F\r\n              </Checkbox>\r\n            </Col>\r\n          </Row>\r\n        </Checkbox.Group>\r\n      </Form.Item>\r\n\r\n      <Form.Item name=\"rate\" label=\"Rate\">\r\n        <Rate />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"upload\"\r\n        label=\"Upload\"\r\n        valuePropName=\"fileList\"\r\n        getValueFromEvent={normFile}\r\n        extra=\"longgggggggggggggggggggggggggggggggggg\"\r\n      >\r\n        <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\r\n          <Button>\r\n            <UploadOutlined /> Click to upload\r\n          </Button>\r\n        </Upload>\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Dragger\">\r\n        <Form.Item name=\"dragger\" valuePropName=\"fileList\" getValueFromEvent={normFile} noStyle>\r\n          <Upload.Dragger name=\"files\" action=\"/upload.do\">\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <InboxOutlined />\r\n            </p>\r\n            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n            <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        wrapperCol={{\r\n          span: 12,\r\n          offset: 6,\r\n        }}\r\n      >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default OtherFormControls;\r\n","import React from \"react\";\r\nimport {Col, Row} from \"antd\";\r\n\r\nimport Basic from \"./Basic\";\r\n import HorizontalLoginForm from \"./HorizontalLoginForm\";\r\n import Registration from \"./Registration\";\r\n import AdvancedSearch from \"./AdvancedSearch\";\r\n import DynamicFormItem from \"./DynamicFormItem\";\r\n import TimeRelatedControls from \"./TimeRelatedControls\";\r\n import CustomizedFormControls from \"./CustomizedFormControls\";\r\n import StoreFormData from \"./StoreFormData\";\r\n import CustomizedValidation from \"./CustomizedValidation\";\r\n import CoordinatedControls from \"./CoordinatedControls\";\r\n import FormLayout from \"./FormLayout\";\r\n import DynamicRules from \"./DynamicRules\";\r\n import OtherFormControls from \"./OtherFormControls\";\r\n\r\nconst Form = () => {\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={24}>\r\n        <Basic/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <HorizontalLoginForm/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <Registration/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <AdvancedSearch/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <DynamicFormItem/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <TimeRelatedControls/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <CustomizedFormControls/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <StoreFormData/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <CustomizedValidation/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <CoordinatedControls/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <FormLayout/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <DynamicRules/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <OtherFormControls/>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default (Form);\r\n"],"sourceRoot":""}