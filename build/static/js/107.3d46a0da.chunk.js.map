{"version":3,"sources":["assets/images/marker.png","routes/extensions/map/googlemap/popUpInfo/Components/MapPopupInfo.js","routes/extensions/map/googlemap/popUpInfo/index.js"],"names":["module","exports","google","window","PopUpInfoWindowExampleGoogleMap","withGoogleMap","props","defaultZoom","center","markers","map","marker","index","defaultIcon","require","key","position","onClick","onMarkerClick","showInfo","onCloseClick","onMarkerClose","infoContent","MapPopupInfo","state","lat","lng","maps","LatLng","className","id","xmlns","width","height","viewBox","d","handleMarkerClick","bind","handleMarkerClose","targetMarker","this","setState","loadingElement","style","containerElement","mapElement","Component","PopUpInfo","title","IntlMessages"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,oC,iICGrCC,EAASC,OAAOD,OAChBE,EAAkCC,yBAAc,SAAAC,GAAK,OACzD,kBAAC,YAAD,CACEC,YAAa,GACbC,OAAQF,EAAME,QAEbF,EAAMG,QAAQC,KAAI,SAACC,EAAQC,GAAT,OACjB,kBAAC,SAAD,CACEC,YAAaC,EAAQ,MACrBC,IAAKH,EACLI,SAAUL,EAAOK,SACjBC,QAAS,kBAAMX,EAAMY,cAAcP,KAOlCA,EAAOQ,UACN,kBAAC,aAAD,CAAYC,aAAc,kBAAMd,EAAMe,cAAcV,KAClD,6BAAMA,EAAOW,sBAgBJC,E,4MAEnBC,MAAQ,CACNhB,OAAQ,CACNiB,IAAK,UAAWC,KAAM,YAIxBjB,QAAS,CACP,CACEO,SAAU,IAAId,EAAOyB,KAAKC,OAAO,WAAY,YAC7CT,UAAU,EACVG,YACE,yBAAKO,UAAU,UACb,6BACE,yBACEC,GAAG,UACHC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAER,0BACEC,EAAE,8QAQR,yBAAKN,UAAU,QACb,gDACA,iDACA,mDAMR,CACEb,SAAU,IAAId,EAAOyB,KAAKC,OAAO,WAAY,YAC7CT,UAAU,EACVG,YACE,yBAAKO,UAAU,UACb,6BACE,yBACEC,GAAG,UACHC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAER,0BACEC,EAAE,8SAQR,yBAAKN,UAAU,QACb,4FACA,oDACA,qD,EASZO,kBAAoB,EAAKA,kBAAkBC,KAAvB,gB,EACpBC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gB,gEAGFE,GAChBC,KAAKC,SAAS,CACZhC,QAAS+B,KAAKhB,MAAMf,QAAQC,KAAI,SAAAC,GAC9B,OAAIA,IAAW4B,EACN,2BACF5B,GADL,IAEEQ,UAAU,IAGPR,S,wCAKK4B,GAChBC,KAAKC,SAAS,CACZhC,QAAS+B,KAAKhB,MAAMf,QAAQC,KAAI,SAAAC,GAC9B,OAAIA,IAAW4B,EACN,2BACF5B,GADL,IAEEQ,UAAU,IAGPR,S,+BAMX,OACE,kBAACP,EAAD,CACEsC,eAAgB,yBAAKC,MAAO,CAACV,OAAO,UACpCW,iBAAkB,yBAAKD,MAAO,CAACV,OAAO,WACtCY,WAAY,yBAAKF,MAAO,CAACV,OAAO,UAChCzB,OAAQgC,KAAKhB,MAAMhB,OACnBC,QAAS+B,KAAKhB,MAAMf,QACpBS,cAAesB,KAAKJ,kBACpBf,cAAemB,KAAKF,wB,GAnHcQ,a,OCxB3BC,UARG,WAChB,OACE,kBAAC,IAAD,CAAMlB,UAAU,UAAUmB,MAAO,kBAACC,EAAA,EAAD,CAAcnB,GAAG,2BAChD,kBAAC,EAAD","file":"static/js/107.3d46a0da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marker.a30f29ac.png\";","import React, {Component} from \"react\";\r\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap} from \"react-google-maps\";\r\n\r\nconst google = window.google;\r\nconst PopUpInfoWindowExampleGoogleMap = withGoogleMap(props => (\r\n  <GoogleMap\r\n    defaultZoom={15}\r\n    center={props.center}\r\n  >\r\n    {props.markers.map((marker, index) => (\r\n      <Marker\r\n        defaultIcon={require(\"assets/images/marker.png\")}\r\n        key={index}\r\n        position={marker.position}\r\n        onClick={() => props.onMarkerClick(marker)}\r\n      >\r\n        {/*\r\n         Show info window only if the 'showInfo' key of the marker is true.\r\n         That is, when the Marker pin has been clicked and 'onCloseClick' has been\r\n         Successfully fired.\r\n         */}\r\n        {marker.showInfo && (\r\n          <InfoWindow onCloseClick={() => props.onMarkerClose(marker)}>\r\n            <div>{marker.infoContent}\r\n            </div>\r\n          </InfoWindow>\r\n        )}\r\n      </Marker>\r\n    ))}\r\n  </GoogleMap>\r\n));\r\n\r\n/*\r\n *\r\n *  Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script>\r\n *  to your HTML to provide google.maps reference\r\n *\r\n *  @author: @chiwoojo\r\n */\r\nexport default class MapPopupInfo extends Component {\r\n\r\n  state = {\r\n    center: {\r\n      lat: 47.646935, lng: -122.303763,\r\n    },\r\n\r\n    // array of objects of markers\r\n    markers: [\r\n      {\r\n        position: new google.maps.LatLng(47.646145, -122.303763),\r\n        showInfo: false,\r\n        infoContent: (\r\n          <div className=\"d-flex\">\r\n            <div>\r\n              <svg\r\n                id=\"Layer_1\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path\r\n                  d=\"M3.5 0c-1.7 0-3 1.6-3 3.5 0 1.7 1 3 2.3 3.4l-.5 8c0\r\n              .6.4 1 1 1h.5c.5 0 1-.4 1-1L4 7C5.5 6.4 6.5 5 6.5\r\n              3.4c0-2-1.3-3.5-3-3.5zm10 0l-.8 5h-.6l-.3-5h-.4L11\r\n              5H10l-.8-5H9v6.5c0 .3.2.5.5.5h1.3l-.5 8c0 .6.4 1 1 1h.4c.6 0\r\n              1-.4 1-1l-.5-8h1.3c.3 0 .5-.2.5-.5V0h-.4z\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <div className=\"ml-1\">\r\n              <p>UW Medical Center</p>\r\n              <p>1959 NE Pacific St</p>\r\n              <p>Seattle, WA 98195</p>\r\n            </div>\r\n\r\n          </div>\r\n        ),\r\n      },\r\n      {\r\n        position: new google.maps.LatLng(47.647935, -122.303763),\r\n        showInfo: false,\r\n        infoContent: (\r\n          <div className=\"d-flex\">\r\n            <div>\r\n              <svg\r\n                id=\"Layer_1\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path\r\n                  d=\"M6 14.5c0 .828-.672 1.5-1.5 1.5S3 15.328 3 14.5 3.672\r\n              13 4.5 13s1.5.672 1.5 1.5zM16 14.5c0 .828-.672 1.5-1.5\r\n              1.5s-1.5-.672-1.5-1.5.672-1.5 1.5-1.5 1.5.672 1.5 1.5zM16\r\n              8V2H4c0-.552-.448-1-1-1H0v1h2l.75 6.438C2.294 8.805 2 9.368\r\n              2 10c0 1.105.895 2 2 2h12v-1H4c-.552 0-1-.448-1-1v-.01L16 8z\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <div className=\"ml-1\">\r\n              <p>University of Washington Intramural Activities (IMA) Building</p>\r\n              <p>3924 Montlake Blvd NE</p>\r\n              <p>Seattle, WA 98195</p>\r\n            </div>\r\n\r\n          </div>\r\n        ),\r\n      },\r\n    ],\r\n  };\r\n\r\n  handleMarkerClick = this.handleMarkerClick.bind(this);\r\n  handleMarkerClose = this.handleMarkerClose.bind(this);\r\n\r\n  // Toggle to 'true' to show InfoWindow and re-renders simple\r\n  handleMarkerClick(targetMarker) {\r\n    this.setState({\r\n      markers: this.state.markers.map(marker => {\r\n        if (marker === targetMarker) {\r\n          return {\r\n            ...marker,\r\n            showInfo: true,\r\n          };\r\n        }\r\n        return marker;\r\n      }),\r\n    });\r\n  }\r\n\r\n  handleMarkerClose(targetMarker) {\r\n    this.setState({\r\n      markers: this.state.markers.map(marker => {\r\n        if (marker === targetMarker) {\r\n          return {\r\n            ...marker,\r\n            showInfo: false,\r\n          };\r\n        }\r\n        return marker;\r\n      }),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <PopUpInfoWindowExampleGoogleMap\r\n        loadingElement={<div style={{height: `100%`}}/>}\r\n        containerElement={<div style={{height: `550px`}}/>}\r\n        mapElement={<div style={{height: `100%`}}/>}\r\n        center={this.state.center}\r\n        markers={this.state.markers}\r\n        onMarkerClick={this.handleMarkerClick}\r\n        onMarkerClose={this.handleMarkerClose}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {Card} from \"antd\";\r\n\r\nimport MapPopupInfo from \"./Components/MapPopupInfo\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\n\r\n\r\nconst PopUpInfo = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title={<IntlMessages id=\"sidebar.map.popupInfo\"/>}>\r\n      <MapPopupInfo/>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PopUpInfo;\r\n"],"sourceRoot":""}