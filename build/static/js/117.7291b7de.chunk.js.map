{"version":3,"sources":["routes/components/dataEntry/Checkbox/Basic.js","routes/components/dataEntry/Checkbox/Disabled.js","routes/components/dataEntry/Checkbox/ControlledCheckbox.js","routes/components/dataEntry/Checkbox/CheckboxGroups.js","routes/components/dataEntry/Checkbox/UseWithGrid.js","routes/components/dataEntry/Checkbox/CheckAll.js","routes/components/dataEntry/Checkbox/index.js"],"names":["onChange","e","console","log","target","checked","Basic","className","title","Disabled","defaultChecked","disabled","ControlledCheckbox","state","toggleChecked","setState","toggleDisable","label","this","style","marginBottom","type","size","onClick","marginLeft","Component","CheckboxGroup","Checkbox","Group","checkedValues","plainOptions","options","value","optionsWithDisabled","CheckboxGroups","defaultValue","UseWithGrid","width","span","defaultCheckedList","CheckAll","checkedList","indeterminate","checkAll","length","onCheckAllChange","lg","md","sm","xs"],"mappings":"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","file":"static/js/117.7291b7de.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Card, Checkbox} from \"antd\";\r\n\r\nfunction onChange(e) {\r\n  console.log(`checked = ${e.target.checked}`);\r\n}\r\n\r\nconst Basic = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Basic\">\r\n      <Checkbox onChange={onChange}>Checkbox</Checkbox>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Basic;\r\n","import React from \"react\";\r\nimport {Card, Checkbox} from \"antd\";\r\n\r\n\r\nconst Disabled = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Disabled\">\r\n      <Checkbox defaultChecked={false} disabled/>\r\n      <br/>\r\n      <Checkbox defaultChecked disabled/>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Disabled;\r\n","import React, {Component} from \"react\";\r\nimport {Button, Card, Checkbox} from \"antd\";\r\n\r\nclass ControlledCheckbox extends Component {\r\n  state = {\r\n    checked: true,\r\n    disabled: false,\r\n  };\r\n  toggleChecked = () => {\r\n    this.setState({checked: !this.state.checked});\r\n  }\r\n  toggleDisable = () => {\r\n    this.setState({disabled: !this.state.disabled});\r\n  }\r\n  onChange = (e) => {\r\n    console.log('checked = ', e.target.checked);\r\n    this.setState({\r\n      checked: e.target.checked,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const label = `${this.state.checked ? 'Checked' : 'Unchecked'}-${this.state.disabled ? 'Disabled' : 'Enabled'}`;\r\n    return (\r\n      <Card className=\"gx-card gx-card\" title=\"ControlledCheckbox\">\r\n        <p style={{marginBottom: '20px'}}>\r\n          <Checkbox\r\n            checked={this.state.checked}\r\n            disabled={this.state.disabled}\r\n            onChange={this.onChange}\r\n          >\r\n            {label}\r\n          </Checkbox>\r\n        </p>\r\n        <p>\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={this.toggleChecked}\r\n          >\r\n            {!this.state.checked ? 'Check' : 'Uncheck'}\r\n          </Button>\r\n          <Button\r\n            style={{marginLeft: '10px'}}\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={this.toggleDisable}\r\n          >\r\n            {!this.state.disabled ? 'Disable' : 'Enable'}\r\n          </Button>\r\n        </p>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default ControlledCheckbox;\r\n","import React from \"react\";\r\nimport {Card, Checkbox} from \"antd\";\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\nfunction onChange(checkedValues) {\r\n  console.log('checked = ', checkedValues);\r\n}\r\n\r\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\r\n\r\nconst options = [\r\n  {label: 'Apple', value: 'Apple'},\r\n  {label: 'Pear', value: 'Pear'},\r\n  {label: 'Orange', value: 'Orange'},\r\n];\r\n\r\nconst optionsWithDisabled = [\r\n  {label: 'Apple', value: 'Apple'},\r\n  {label: 'Pear', value: 'Pear'},\r\n  {label: 'Orange', value: 'Orange', disabled: false},\r\n];\r\n\r\n\r\nconst CheckboxGroups = () => {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Checkbox Groups\">\r\n        <CheckboxGroup options={plainOptions} defaultValue={['Apple']} onChange={onChange}/>\r\n        <br/><br/>\r\n        <CheckboxGroup options={options} defaultValue={['Pear']} onChange={onChange}/>\r\n        <br/><br/>\r\n        <CheckboxGroup options={optionsWithDisabled} disabled defaultValue={['Apple']} onChange={onChange}/>\r\n      </Card>\r\n    );\r\n  }\r\n;\r\n\r\nexport default CheckboxGroups;\r\n","import React from \"react\";\r\nimport {Card, Checkbox, Col, Row} from \"antd\";\r\n\r\nfunction onChange(checkedValues) {\r\n  console.log('checked = ', checkedValues);\r\n}\r\n\r\n\r\nconst UseWithGrid = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Use With Grid\">\r\n      <Checkbox.Group style={{width: '100%'}} onChange={onChange}>\r\n        <Row>\r\n          <Col span={8}><Checkbox className=\"gx-mb-3\" value=\"A\">A</Checkbox></Col>\r\n          <Col span={8}><Checkbox className=\"gx-mb-3\" value=\"B\">B</Checkbox></Col>\r\n          <Col span={8}><Checkbox className=\"gx-mb-3\" value=\"C\">C</Checkbox></Col>\r\n          <Col span={8}><Checkbox className=\"gx-mb-3\" value=\"D\">D</Checkbox></Col>\r\n          <Col span={8}><Checkbox className=\"gx-mb-3\" value=\"E\">E</Checkbox></Col>\r\n        </Row>\r\n      </Checkbox.Group>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UseWithGrid;\r\n","import React, {Component} from \"react\";\r\nimport {Card, Checkbox} from \"antd\";\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\r\nconst defaultCheckedList = ['Apple', 'Orange'];\r\n\r\n\r\nclass CheckAll extends Component {\r\n  state = {\r\n    checkedList: defaultCheckedList,\r\n    indeterminate: true,\r\n    checkAll: false,\r\n  };\r\n  onChange = (checkedList) => {\r\n    this.setState({\r\n      checkedList,\r\n      indeterminate: !!checkedList.length && (checkedList.length < plainOptions.length),\r\n      checkAll: checkedList.length === plainOptions.length,\r\n    });\r\n  }\r\n  onCheckAllChange = (e) => {\r\n    this.setState({\r\n      checkedList: e.target.checked ? plainOptions : [],\r\n      indeterminate: false,\r\n      checkAll: e.target.checked,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"CheckAll\">\r\n        <div className=\"gx-border-bottom gx-pb-3 gx-mb-3\">\r\n          <Checkbox\r\n            indeterminate={this.state.indeterminate}\r\n            onChange={this.onCheckAllChange}\r\n            checked={this.state.checkAll}\r\n          >\r\n            Check all\r\n          </Checkbox>\r\n        </div>\r\n        <CheckboxGroup options={plainOptions} value={this.state.checkedList} onChange={this.onChange}/>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default CheckAll;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Col, Row} from \"antd\";\r\n\r\nimport Basic from \"./Basic\";\r\nimport Disabled from \"./Disabled\";\r\nimport ControlledCheckbox from \"./ControlledCheckbox\";\r\nimport CheckboxGroups from \"./CheckboxGroups\";\r\nimport UseWithGrid from \"./UseWithGrid\";\r\nimport CheckAll from \"./CheckAll\";\r\n\r\nconst Checkbox = () => {\r\n  return (\r\n    <Row>\r\n      <Col lg={12} md={12} sm={24} xs={24}>\r\n        <Basic/>\r\n        <CheckboxGroups/>\r\n        <ControlledCheckbox/>\r\n      </Col>\r\n      <Col lg={12} md={12} sm={24} xs={24}>\r\n        <Disabled/>\r\n        <UseWithGrid/>\r\n        <CheckAll/>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default (Checkbox);\r\n"],"sourceRoot":""}