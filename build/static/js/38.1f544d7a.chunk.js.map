{"version":3,"sources":["components/ContainerHeader/index.js","routes/extensions/charts/recharts/bar/Components/data.js","routes/extensions/charts/recharts/bar/Components/StackedBarChart.js","routes/extensions/charts/amchart/bar/Components/ColumnWithRotatedSeries.js","routes/extensions/charts/amchart/bar/Components/SimpleColumnChart.js","routes/extensions/charts/amchart/bar/Components/ColumnAndLineMix.js","routes/extensions/charts/amchart/bar/Components/Cylinder3DChart.js","routes/extensions/charts/amchart/bar/Components/Column3DChart.js","routes/extensions/charts/amchart/bar/Components/LayeredColumnChart.js","routes/extensions/charts/amchart/bar/Components/StackedbarChartWithNegativeValues.js","routes/extensions/charts/amchart/bar/Components/StackedColumnChart.js","routes/extensions/charts/amchart/bar/Components/ColumnChartWithImagesOnTop.js","routes/extensions/charts/amchart/bar/Components/ClusteredBarChart.js","routes/extensions/charts/amchart/bar/Components/Bar3DChart.js","routes/extensions/charts/amchart/bar/Components/BarAndLineChartMix.js","routes/extensions/charts/amchart/bar/Components/FloatingBarChart.js","routes/extensions/charts/amchart/bar/Components/Stacked3DColumnChart.js","routes/extensions/charts/amchart/bar/index.js"],"names":["ContainerHeader","title","className","data","name","uv","price","amt","StackedBarChart","width","height","margin","top","right","left","bottom","dataKey","strokeDasharray","stackId","fill","ColumnWithRotatedSeries","React","style","options","SimpleColumnChart","ColumnChartWithImagesOnTop","Cylinder3DChart","Column3DChart","LayeredColumnChart","StackedbarChartWithNegativeValues","config","item","Math","abs","values","value","category","StackedColumnChart","Bar3DChart","BarAndLineChartMix","FloatingBarChart","BarChart","match","IntlMessages","id","lg","md","sm","xs","ColumnAndLineMix","Stacked3DColumnChart","ClusteredBarChart"],"mappings":"oHAAA,oBAUeA,IARS,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACxB,OACE,yBAAKC,UAAU,mBACb,wBAAIA,UAAU,iBAAiBD,M,kCCItBE,IATF,CACX,CAACC,KAAM,SAAUC,GAAI,IAAMC,MAAO,KAAMC,IAAK,MAC7C,CAACH,KAAM,SAAUC,GAAI,IAAMC,MAAO,KAAMC,IAAK,MAC7C,CAACH,KAAM,SAAUC,GAAI,IAAMC,MAAO,KAAMC,IAAK,MAC7C,CAACH,KAAM,SAAUC,GAAI,KAAMC,MAAO,KAAMC,IAAK,KAC7C,CAACH,KAAM,SAAUC,GAAI,KAAMC,MAAO,KAAMC,IAAK,MAC7C,CAACH,KAAM,SAAUC,GAAI,KAAMC,MAAO,KAAMC,IAAK,MAC7C,CAACH,KAAM,SAAUC,GAAI,KAAMC,MAAO,KAAMC,IAAK,Q,kCCP/C,sCAqBeC,IAhBS,kBAEtB,kBAAC,IAAD,CAAqBC,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CAAUP,KAAMA,IACNQ,OAAQ,CAACC,IAAK,GAAIC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IACvD,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKD,QAAQ,QAAQE,QAAQ,IAAIC,KAAK,YACtC,kBAAC,IAAD,CAAKH,QAAQ,KAAKE,QAAQ,IAAIC,KAAK,gB,sHC8E1BC,EA3FiB,WAoF9B,OACE,yBAAKlB,UAAU,OACb,kBAAC,IAASmB,MAAV,CAAgBC,MAAO,CAACb,MAAO,OAAQC,OAAQ,SAAUa,QApF9C,CACb,KAAQ,SACR,MAAS,QACT,YAAe,GACf,aAAgB,CAAC,CACf,QAAW,MACX,OAAU,KACV,MAAS,WACR,CACD,QAAW,QACX,OAAU,KACV,MAAS,WACR,CACD,QAAW,QACX,OAAU,KACV,MAAS,WACR,CACD,QAAW,UACX,OAAU,KACV,MAAS,WACR,CACD,QAAW,KACX,OAAU,KACV,MAAS,WACR,CACD,QAAW,SACX,OAAU,KACV,MAAS,WACR,CACD,QAAW,QACX,OAAU,IACV,MAAS,WACR,CACD,QAAW,QACX,OAAU,IACV,MAAS,WACR,CACD,QAAW,cACX,OAAU,IACV,MAAS,WACR,CACD,QAAW,SACX,OAAU,IACV,MAAS,WACR,CACD,QAAW,cACX,OAAU,IACV,MAAS,WACR,CACD,QAAW,SACX,OAAU,IACV,MAAS,YAEX,UAAa,CAAC,CACZ,UAAa,EACb,SAAY,OACZ,MAAS,0BAEX,cAAiB,EACjB,OAAU,CAAC,CACT,YAAe,iCACf,gBAAmB,QACnB,WAAc,GACd,UAAa,GACb,KAAQ,SACR,WAAc,WAEhB,YAAe,CACb,wBAA0B,EAC1B,YAAe,EACf,UAAY,GAEd,cAAiB,UACjB,aAAgB,CACd,aAAgB,QAChB,cAAiB,IAEnB,OAAU,CACR,SAAW,Q,OCGFC,EAnFW,WA4ExB,OACE,yBAAKtB,UAAU,OACb,kBAAC,IAASmB,MAAV,CAAgBC,MAAO,CAACb,MAAO,OAAQC,OAAQ,SAAUa,QA5E9C,CACb,KAAQ,SACR,MAAS,QACT,aAAgB,CAAC,CACf,QAAW,MACX,OAAU,MACT,CACD,QAAW,QACX,OAAU,MACT,CACD,QAAW,QACX,OAAU,MACT,CACD,QAAW,UACX,OAAU,MACT,CACD,QAAW,KACX,OAAU,MACT,CACD,QAAW,SACX,OAAU,MACT,CACD,QAAW,QACX,OAAU,KACT,CACD,QAAW,QACX,OAAU,KACT,CACD,QAAW,cACX,OAAU,KACT,CACD,QAAW,SACX,OAAU,KACT,CACD,QAAW,cACX,OAAU,KACT,CACD,QAAW,SACX,OAAU,KACT,CACD,QAAW,SACX,OAAU,MAEZ,UAAa,CAAC,CACZ,UAAa,UACb,UAAa,GACb,WAAc,IAEhB,iBAAmB,EACnB,cAAiB,EACjB,OAAU,CAAC,CACT,YAAe,iCACf,WAAc,GACd,UAAa,GACb,KAAQ,SACR,WAAc,WAEhB,YAAe,CACb,wBAA0B,EAC1B,YAAe,EACf,UAAY,GAEd,cAAiB,UACjB,aAAgB,CACd,aAAgB,QAChB,UAAa,EACb,aAAgB,QAChB,WAAc,IAEhB,OAAU,CACR,SAAW,QCqBFE,EA7FoB,WAsFjC,OACE,yBAAKvB,UAAU,OACb,kBAAC,IAASmB,MAAV,CAAgBC,MAAO,CAACb,MAAO,OAAQC,OAAQ,SAAUa,QAtF9C,CACb,KAAQ,SACR,eAAiB,EACjB,MAAS,QACT,aAAe,EACf,WAAc,GACd,YAAe,EACf,UAAa,GACb,aAAgB,GAChB,QAAW,CACT,mBAAqB,EACrB,kBAAqB,GACrB,gBAAmB,EACnB,MAAS,WAGX,aAAgB,CAAC,CACf,KAAQ,KACR,OAAU,KACV,SAAY,MACX,CACD,KAAQ,KACR,OAAU,KACV,SAAY,MACX,CACD,KAAQ,KACR,OAAU,KACV,SAAY,MACX,CACD,KAAQ,KACR,OAAU,KACV,SAAY,MACX,CACD,KAAQ,KACR,OAAU,KACV,SAAY,KACZ,eAAkB,GACjB,CACD,KAAQ,KACR,OAAU,KACV,SAAY,KACZ,iBAAoB,EACpB,MAAS,GACT,WAAc,iBAEhB,UAAa,CAAC,CACZ,UAAa,EACb,SAAY,SAEd,cAAiB,EACjB,OAAU,CAAC,CACT,WAAc,QACd,YAAe,mIACf,WAAc,EACd,MAAS,SACT,KAAQ,SACR,WAAc,SACd,gBAAmB,oBAClB,CACD,GAAM,SACN,YAAe,mIACf,OAAU,QACV,cAAiB,EACjB,WAAc,EACd,kBAAqB,EACrB,YAAe,UACf,6BAA+B,EAC/B,sBAAyB,EACzB,WAAc,EACd,UAAa,EACb,MAAS,WACT,WAAc,WACd,gBAAmB,mBAErB,cAAiB,OACjB,aAAgB,CACd,aAAgB,QAChB,UAAa,EACb,WAAc,GAEhB,OAAU,CACR,SAAW,QCwBFG,EA3GS,WAoGtB,OACE,yBAAKxB,UAAU,OACb,kBAAC,IAASmB,MAAV,CAAgBC,MAAO,CAACb,MAAO,OAAQC,OAAQ,SAAUa,QApG9C,CACb,MAAS,QACT,KAAQ,SACR,cAAiB,EACjB,aAAgB,CAAC,CACf,QAAW,MACX,OAAU,KACV,MAAS,WACR,CACD,QAAW,QACX,OAAU,KACV,MAAS,WACR,CACD,QAAW,QACX,OAAU,KACV,MAAS,WACR,CACD,QAAW,UACX,OAAU,KACV,MAAS,WACR,CACD,QAAW,KACX,OAAU,KACV,MAAS,WACR,CACD,QAAW,SACX,OAAU,KACV,MAAS,WACR,CACD,QAAW,QACX,OAAU,IACV,MAAS,WACR,CACD,QAAW,QACX,OAAU,IACV,MAAS,WACR,CACD,QAAW,cACX,OAAU,IACV,MAAS,WACR,CACD,QAAW,SACX,OAAU,IACV,MAAS,WACR,CACD,QAAW,cACX,OAAU,IACV,MAAS,WACR,CACD,QAAW,SACX,OAAU,IACV,MAAS,WACR,CACD,QAAW,SACX,OAAU,IACV,MAAS,WACR,CACD,QAAW,QACX,OAAU,IACV,MAAS,WACR,CACD,QAAW,SACX,OAAU,IACV,MAAS,YAEX,UAAa,CAAC,CACZ,SAAY,OACZ,UAAa,EACb,UAAa,IAEf,OAAU,CAAC,CACT,YAAe,iCACf,WAAc,QACd,WAAc,IACd,UAAa,GACb,KAAQ,SACR,UAAa,EACb,WAAc,WAEhB,QAAW,GACX,MAAS,GACT,YAAe,CACb,wBAA0B,EAC1B,YAAe,EACf,UAAY,GAEd,cAAiB,UACjB,aAAgB,CACd,aAAgB,QAChB,UAAa,EACb,UAAa,GAGf,OAAU,CACR,SAAW,QCeFI,EA/GO,WAwGpB,OACE,yBAAKzB,UAAU,OACb,kBAAC,IAASmB,MAAV,CAAgBC,MAAO,CAACb,MAAO,OAAQC,OAAQ,SAAUa,QAxG9C,CACb,MAAS,QACT,KAAQ,SACR,cAAiB,EACjB,aAAgB,CAAC,CACf,QAAW,MACX,OAAU,KACV,MAAS,WACR,CACD,QAAW,QACX,OAAU,KACV,MAAS,WACR,CACD,QAAW,QACX,OAAU,KACV,MAAS,WACR,CACD,QAAW,UACX,OAAU,KACV,MAAS,WACR,CACD,QAAW,KACX,OAAU,KACV,MAAS,WACR,CACD,QAAW,SACX,OAAU,KACV,MAAS,WACR,CACD,QAAW,QACX,OAAU,IACV,MAAS,WACR,CACD,QAAW,QACX,OAAU,IACV,MAAS,WACR,CACD,QAAW,cACX,OAAU,IACV,MAAS,WACR,CACD,QAAW,SACX,OAAU,IACV,MAAS,WACR,CACD,QAAW,cACX,OAAU,IACV,MAAS,WACR,CACD,QAAW,SACX,OAAU,IACV,MAAS,WACR,CACD,QAAW,SACX,OA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","file":"static/js/38.1f544d7a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ContainerHeader = ({title}) => {\r\n  return (\r\n    <div className=\"gx-page-heading\">\r\n      <h2 className=\"gx-page-title\">{title}</h2>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContainerHeader;\r\n\r\n","const data = [\r\n  {name: 'Page A', uv: 4000, price: 2400, amt: 2400},\r\n  {name: 'Page B', uv: 3000, price: 1398, amt: 2210},\r\n  {name: 'Page C', uv: 2000, price: 9800, amt: 2290},\r\n  {name: 'Page D', uv: 2780, price: 3908, amt: 2000},\r\n  {name: 'Page E', uv: 1890, price: 4800, amt: 2181},\r\n  {name: 'Page F', uv: 2390, price: 3800, amt: 2500},\r\n  {name: 'Page G', uv: 3490, price: 4300, amt: 2100},\r\n];\r\nexport default data;\r\n","import React from \"react\";\r\nimport {Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis} from \"recharts\";\r\n\r\nimport data from \"./data\";\r\n\r\nconst StackedBarChart = () => (\r\n\r\n  <ResponsiveContainer width=\"100%\" height={200}>\r\n    <BarChart data={data}\r\n              margin={{top: 10, right: 0, left: -15, bottom: 0}}>\r\n      <XAxis dataKey=\"name\"/>\r\n      <YAxis/>\r\n      <CartesianGrid strokeDasharray=\"3 3\"/>\r\n      <Tooltip/>\r\n      <Legend/>\r\n      <Bar dataKey=\"price\" stackId=\"a\" fill=\"#003366\"/>\r\n      <Bar dataKey=\"uv\" stackId=\"a\" fill=\"#FE9E15\"/>\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default StackedBarChart;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst ColumnWithRotatedSeries = () => {\r\n\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"theme\": \"light\",\r\n    \"marginRight\": 70,\r\n    \"dataProvider\": [{\r\n      \"country\": \"USA\",\r\n      \"visits\": 3025,\r\n      \"color\": \"#FF0F00\"\r\n    }, {\r\n      \"country\": \"China\",\r\n      \"visits\": 1882,\r\n      \"color\": \"#FF6600\"\r\n    }, {\r\n      \"country\": \"Japan\",\r\n      \"visits\": 1809,\r\n      \"color\": \"#FF9E01\"\r\n    }, {\r\n      \"country\": \"Germany\",\r\n      \"visits\": 1322,\r\n      \"color\": \"#FCD202\"\r\n    }, {\r\n      \"country\": \"UK\",\r\n      \"visits\": 1122,\r\n      \"color\": \"#F8FF01\"\r\n    }, {\r\n      \"country\": \"France\",\r\n      \"visits\": 1114,\r\n      \"color\": \"#B0DE09\"\r\n    }, {\r\n      \"country\": \"India\",\r\n      \"visits\": 984,\r\n      \"color\": \"#04D215\"\r\n    }, {\r\n      \"country\": \"Spain\",\r\n      \"visits\": 711,\r\n      \"color\": \"#0D8ECF\"\r\n    }, {\r\n      \"country\": \"Netherlands\",\r\n      \"visits\": 665,\r\n      \"color\": \"#0D52D1\"\r\n    }, {\r\n      \"country\": \"Russia\",\r\n      \"visits\": 580,\r\n      \"color\": \"#2A0CD0\"\r\n    }, {\r\n      \"country\": \"South Korea\",\r\n      \"visits\": 443,\r\n      \"color\": \"#8A0CCF\"\r\n    }, {\r\n      \"country\": \"Canada\",\r\n      \"visits\": 441,\r\n      \"color\": \"#CD0D74\"\r\n    }],\r\n    \"valueAxes\": [{\r\n      \"axisAlpha\": 0,\r\n      \"position\": \"left\",\r\n      \"title\": \"Visitors from country\"\r\n    }],\r\n    \"startDuration\": 1,\r\n    \"graphs\": [{\r\n      \"balloonText\": \"<b>[[category]]: [[value]]</b>\",\r\n      \"fillColorsField\": \"color\",\r\n      \"fillAlphas\": 0.9,\r\n      \"lineAlpha\": 0.2,\r\n      \"type\": \"column\",\r\n      \"valueField\": \"visits\"\r\n    }],\r\n    \"chartCursor\": {\r\n      \"categoryBalloonEnabled\": false,\r\n      \"cursorAlpha\": 0,\r\n      \"zoomable\": false\r\n    },\r\n    \"categoryField\": \"country\",\r\n    \"categoryAxis\": {\r\n      \"gridPosition\": \"start\",\r\n      \"labelRotation\": 45\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ColumnWithRotatedSeries;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst SimpleColumnChart = () => {\r\n\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"theme\": \"light\",\r\n    \"dataProvider\": [{\r\n      \"country\": \"USA\",\r\n      \"visits\": 2025\r\n    }, {\r\n      \"country\": \"China\",\r\n      \"visits\": 1882\r\n    }, {\r\n      \"country\": \"Japan\",\r\n      \"visits\": 1809\r\n    }, {\r\n      \"country\": \"Germany\",\r\n      \"visits\": 1322\r\n    }, {\r\n      \"country\": \"UK\",\r\n      \"visits\": 1122\r\n    }, {\r\n      \"country\": \"France\",\r\n      \"visits\": 1114\r\n    }, {\r\n      \"country\": \"India\",\r\n      \"visits\": 984\r\n    }, {\r\n      \"country\": \"Spain\",\r\n      \"visits\": 711\r\n    }, {\r\n      \"country\": \"Netherlands\",\r\n      \"visits\": 665\r\n    }, {\r\n      \"country\": \"Russia\",\r\n      \"visits\": 580\r\n    }, {\r\n      \"country\": \"South Korea\",\r\n      \"visits\": 443\r\n    }, {\r\n      \"country\": \"Canada\",\r\n      \"visits\": 441\r\n    }, {\r\n      \"country\": \"Brazil\",\r\n      \"visits\": 395\r\n    }],\r\n    \"valueAxes\": [{\r\n      \"gridColor\": \"#FFFFFF\",\r\n      \"gridAlpha\": 0.2,\r\n      \"dashLength\": 0\r\n    }],\r\n    \"gridAboveGraphs\": true,\r\n    \"startDuration\": 1,\r\n    \"graphs\": [{\r\n      \"balloonText\": \"[[category]]: <b>[[value]]</b>\",\r\n      \"fillAlphas\": 0.8,\r\n      \"lineAlpha\": 0.2,\r\n      \"type\": \"column\",\r\n      \"valueField\": \"visits\"\r\n    }],\r\n    \"chartCursor\": {\r\n      \"categoryBalloonEnabled\": false,\r\n      \"cursorAlpha\": 0,\r\n      \"zoomable\": false\r\n    },\r\n    \"categoryField\": \"country\",\r\n    \"categoryAxis\": {\r\n      \"gridPosition\": \"start\",\r\n      \"gridAlpha\": 0,\r\n      \"tickPosition\": \"start\",\r\n      \"tickLength\": 20\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SimpleColumnChart;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst ColumnChartWithImagesOnTop = () => {\r\n\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"addClassNames\": true,\r\n    \"theme\": \"light\",\r\n    \"autoMargins\": false,\r\n    \"marginLeft\": 30,\r\n    \"marginRight\": 8,\r\n    \"marginTop\": 10,\r\n    \"marginBottom\": 26,\r\n    \"balloon\": {\r\n      \"adjustBorderColor\": false,\r\n      \"horizontalPadding\": 10,\r\n      \"verticalPadding\": 8,\r\n      \"color\": \"#ffffff\"\r\n    },\r\n\r\n    \"dataProvider\": [{\r\n      \"year\": 2009,\r\n      \"income\": 23.5,\r\n      \"expenses\": 21.1\r\n    }, {\r\n      \"year\": 2010,\r\n      \"income\": 26.2,\r\n      \"expenses\": 30.5\r\n    }, {\r\n      \"year\": 2011,\r\n      \"income\": 30.1,\r\n      \"expenses\": 34.9\r\n    }, {\r\n      \"year\": 2012,\r\n      \"income\": 29.5,\r\n      \"expenses\": 31.1\r\n    }, {\r\n      \"year\": 2013,\r\n      \"income\": 30.6,\r\n      \"expenses\": 28.2,\r\n      \"dashLengthLine\": 5\r\n    }, {\r\n      \"year\": 2014,\r\n      \"income\": 34.1,\r\n      \"expenses\": 32.9,\r\n      \"dashLengthColumn\": 5,\r\n      \"alpha\": 0.2,\r\n      \"additional\": \"(projection)\"\r\n    }],\r\n    \"valueAxes\": [{\r\n      \"axisAlpha\": 0,\r\n      \"position\": \"left\"\r\n    }],\r\n    \"startDuration\": 1,\r\n    \"graphs\": [{\r\n      \"alphaField\": \"alpha\",\r\n      \"balloonText\": \"<span style='font-size:12px;'>[[title]] in [[category]]:<br><span style='font-size:20px;'>[[value]]</span> [[additional]]</span>\",\r\n      \"fillAlphas\": 1,\r\n      \"title\": \"Income\",\r\n      \"type\": \"column\",\r\n      \"valueField\": \"income\",\r\n      \"dashLengthField\": \"dashLengthColumn\"\r\n    }, {\r\n      \"id\": \"graph2\",\r\n      \"balloonText\": \"<span style='font-size:12px;'>[[title]] in [[category]]:<br><span style='font-size:20px;'>[[value]]</span> [[additional]]</span>\",\r\n      \"bullet\": \"round\",\r\n      \"lineThickness\": 3,\r\n      \"bulletSize\": 7,\r\n      \"bulletBorderAlpha\": 1,\r\n      \"bulletColor\": \"#FFFFFF\",\r\n      \"useLineColorForBulletBorder\": true,\r\n      \"bulletBorderThickness\": 3,\r\n      \"fillAlphas\": 0,\r\n      \"lineAlpha\": 1,\r\n      \"title\": \"Expenses\",\r\n      \"valueField\": \"expenses\",\r\n      \"dashLengthField\": \"dashLengthLine\"\r\n    }],\r\n    \"categoryField\": \"year\",\r\n    \"categoryAxis\": {\r\n      \"gridPosition\": \"start\",\r\n      \"axisAlpha\": 0,\r\n      \"tickLength\": 0\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ColumnChartWithImagesOnTop;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst Cylinder3DChart = () => {\r\n\r\n  const config = {\r\n    \"theme\": \"light\",\r\n    \"type\": \"serial\",\r\n    \"startDuration\": 2,\r\n    \"dataProvider\": [{\r\n      \"country\": \"USA\",\r\n      \"visits\": 4025,\r\n      \"color\": \"#FF0F00\"\r\n    }, {\r\n      \"country\": \"China\",\r\n      \"visits\": 1882,\r\n      \"color\": \"#FF6600\"\r\n    }, {\r\n      \"country\": \"Japan\",\r\n      \"visits\": 1809,\r\n      \"color\": \"#FF9E01\"\r\n    }, {\r\n      \"country\": \"Germany\",\r\n      \"visits\": 1322,\r\n      \"color\": \"#FCD202\"\r\n    }, {\r\n      \"country\": \"UK\",\r\n      \"visits\": 1122,\r\n      \"color\": \"#F8FF01\"\r\n    }, {\r\n      \"country\": \"France\",\r\n      \"visits\": 1114,\r\n      \"color\": \"#B0DE09\"\r\n    }, {\r\n      \"country\": \"India\",\r\n      \"visits\": 984,\r\n      \"color\": \"#04D215\"\r\n    }, {\r\n      \"country\": \"Spain\",\r\n      \"visits\": 711,\r\n      \"color\": \"#0D8ECF\"\r\n    }, {\r\n      \"country\": \"Netherlands\",\r\n      \"visits\": 665,\r\n      \"color\": \"#0D52D1\"\r\n    }, {\r\n      \"country\": \"Russia\",\r\n      \"visits\": 580,\r\n      \"color\": \"#2A0CD0\"\r\n    }, {\r\n      \"country\": \"South Korea\",\r\n      \"visits\": 443,\r\n      \"color\": \"#8A0CCF\"\r\n    }, {\r\n      \"country\": \"Canada\",\r\n      \"visits\": 441,\r\n      \"color\": \"#CD0D74\"\r\n    }, {\r\n      \"country\": \"Brazil\",\r\n      \"visits\": 395,\r\n      \"color\": \"#754DEB\"\r\n    }, {\r\n      \"country\": \"Italy\",\r\n      \"visits\": 386,\r\n      \"color\": \"#DDDDDD\"\r\n    }, {\r\n      \"country\": \"Taiwan\",\r\n      \"visits\": 338,\r\n      \"color\": \"#333333\"\r\n    }],\r\n    \"valueAxes\": [{\r\n      \"position\": \"left\",\r\n      \"axisAlpha\": 0,\r\n      \"gridAlpha\": 0\r\n    }],\r\n    \"graphs\": [{\r\n      \"balloonText\": \"[[category]]: <b>[[value]]</b>\",\r\n      \"colorField\": \"color\",\r\n      \"fillAlphas\": 0.85,\r\n      \"lineAlpha\": 0.1,\r\n      \"type\": \"column\",\r\n      \"topRadius\": 1,\r\n      \"valueField\": \"visits\"\r\n    }],\r\n    \"depth3D\": 40,\r\n    \"angle\": 30,\r\n    \"chartCursor\": {\r\n      \"categoryBalloonEnabled\": false,\r\n      \"cursorAlpha\": 0,\r\n      \"zoomable\": false\r\n    },\r\n    \"categoryField\": \"country\",\r\n    \"categoryAxis\": {\r\n      \"gridPosition\": \"start\",\r\n      \"axisAlpha\": 0,\r\n      \"gridAlpha\": 0\r\n\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cylinder3DChart;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst Column3DChart = () => {\r\n\r\n  const config = {\r\n    \"theme\": \"light\",\r\n    \"type\": \"serial\",\r\n    \"startDuration\": 2,\r\n    \"dataProvider\": [{\r\n      \"country\": \"USA\",\r\n      \"visits\": 4025,\r\n      \"color\": \"#FF0F00\"\r\n    }, {\r\n      \"country\": \"China\",\r\n      \"visits\": 1882,\r\n      \"color\": \"#FF6600\"\r\n    }, {\r\n      \"country\": \"Japan\",\r\n      \"visits\": 1809,\r\n      \"color\": \"#FF9E01\"\r\n    }, {\r\n      \"country\": \"Germany\",\r\n      \"visits\": 1322,\r\n      \"color\": \"#FCD202\"\r\n    }, {\r\n      \"country\": \"UK\",\r\n      \"visits\": 1122,\r\n      \"color\": \"#F8FF01\"\r\n    }, {\r\n      \"country\": \"France\",\r\n      \"visits\": 1114,\r\n      \"color\": \"#B0DE09\"\r\n    }, {\r\n      \"country\": \"India\",\r\n      \"visits\": 984,\r\n      \"color\": \"#04D215\"\r\n    }, {\r\n      \"country\": \"Spain\",\r\n      \"visits\": 711,\r\n      \"color\": \"#0D8ECF\"\r\n    }, {\r\n      \"country\": \"Netherlands\",\r\n      \"visits\": 665,\r\n      \"color\": \"#0D52D1\"\r\n    }, {\r\n      \"country\": \"Russia\",\r\n      \"visits\": 580,\r\n      \"color\": \"#2A0CD0\"\r\n    }, {\r\n      \"country\": \"South Korea\",\r\n      \"visits\": 443,\r\n      \"color\": \"#8A0CCF\"\r\n    }, {\r\n      \"country\": \"Canada\",\r\n      \"visits\": 441,\r\n      \"color\": \"#CD0D74\"\r\n    }, {\r\n      \"country\": \"Brazil\",\r\n      \"visits\": 395,\r\n      \"color\": \"#754DEB\"\r\n    }, {\r\n      \"country\": \"Italy\",\r\n      \"visits\": 386,\r\n      \"color\": \"#DDDDDD\"\r\n    }, {\r\n      \"country\": \"Australia\",\r\n      \"visits\": 384,\r\n      \"color\": \"#999999\"\r\n    }, {\r\n      \"country\": \"Taiwan\",\r\n      \"visits\": 338,\r\n      \"color\": \"#333333\"\r\n    }, {\r\n      \"country\": \"Poland\",\r\n      \"visits\": 328,\r\n      \"color\": \"#000000\"\r\n    }],\r\n    \"valueAxes\": [{\r\n      \"position\": \"left\",\r\n      \"title\": \"Visitors\"\r\n    }],\r\n    \"graphs\": [{\r\n      \"balloonText\": \"[[category]]: <b>[[value]]</b>\",\r\n      \"fillColorsField\": \"color\",\r\n      \"fillAlphas\": 1,\r\n      \"lineAlpha\": 0.1,\r\n      \"type\": \"column\",\r\n      \"valueField\": \"visits\"\r\n    }],\r\n    \"depth3D\": 20,\r\n    \"angle\": 30,\r\n    \"chartCursor\": {\r\n      \"categoryBalloonEnabled\": false,\r\n      \"cursorAlpha\": 0,\r\n      \"zoomable\": false\r\n    },\r\n    \"categoryField\": \"country\",\r\n    \"categoryAxis\": {\r\n      \"gridPosition\": \"start\",\r\n      \"labelRotation\": 90\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Column3DChart;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst LayeredColumnChart = () => {\r\n\r\n  const config = {\r\n    \"theme\": \"light\",\r\n    \"type\": \"serial\",\r\n    \"dataProvider\": [{\r\n      \"country\": \"USA\",\r\n      \"year2004\": 3.5,\r\n      \"year2005\": 4.2\r\n    }, {\r\n      \"country\": \"UK\",\r\n      \"year2004\": 1.7,\r\n      \"year2005\": 3.1\r\n    }, {\r\n      \"country\": \"Canada\",\r\n      \"year2004\": 2.8,\r\n      \"year2005\": 2.9\r\n    }, {\r\n      \"country\": \"Japan\",\r\n      \"year2004\": 2.6,\r\n      \"year2005\": 2.3\r\n    }, {\r\n      \"country\": \"France\",\r\n      \"year2004\": 1.4,\r\n      \"year2005\": 2.1\r\n    }, {\r\n      \"country\": \"Brazil\",\r\n      \"year2004\": 2.6,\r\n      \"year2005\": 4.9\r\n    }],\r\n    \"valueAxes\": [{\r\n      \"unit\": \"%\",\r\n      \"position\": \"left\",\r\n      \"title\": \"GDP growth rate\",\r\n    }],\r\n    \"startDuration\": 1,\r\n    \"graphs\": [{\r\n      \"balloonText\": \"GDP grow in [[category]] (2004): <b>[[value]]</b>\",\r\n      \"fillAlphas\": 0.9,\r\n      \"lineAlpha\": 0.2,\r\n      \"title\": \"2004\",\r\n      \"type\": \"column\",\r\n      \"valueField\": \"year2004\"\r\n    }, {\r\n      \"balloonText\": \"GDP grow in [[category]] (2005): <b>[[value]]</b>\",\r\n      \"fillAlphas\": 0.9,\r\n      \"lineAlpha\": 0.2,\r\n      \"title\": \"2005\",\r\n      \"type\": \"column\",\r\n      \"clustered\": false,\r\n      \"columnWidth\": 0.5,\r\n      \"valueField\": \"year2005\"\r\n    }],\r\n    \"plotAreaFillAlphas\": 0.1,\r\n    \"categoryField\": \"country\",\r\n    \"categoryAxis\": {\r\n      \"gridPosition\": \"start\"\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LayeredColumnChart;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst StackedbarChartWithNegativeValues = () => {\r\n\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"theme\": \"light\",\r\n    \"rotate\": true,\r\n    \"marginBottom\": 50,\r\n    \"dataProvider\": [{\r\n      \"age\": \"85+\",\r\n      \"male\": -0.1,\r\n      \"female\": 0.3\r\n    }, {\r\n      \"age\": \"80-54\",\r\n      \"male\": -0.2,\r\n      \"female\": 0.3\r\n    }, {\r\n      \"age\": \"75-79\",\r\n      \"male\": -0.3,\r\n      \"female\": 0.6\r\n    }, {\r\n      \"age\": \"70-74\",\r\n      \"male\": -0.5,\r\n      \"female\": 0.8\r\n    }, {\r\n      \"age\": \"65-69\",\r\n      \"male\": -0.8,\r\n      \"female\": 1.0\r\n    }, {\r\n      \"age\": \"60-64\",\r\n      \"male\": -1.1,\r\n      \"female\": 1.3\r\n    }, {\r\n      \"age\": \"55-59\",\r\n      \"male\": -1.7,\r\n      \"female\": 1.9\r\n    }, {\r\n      \"age\": \"50-54\",\r\n      \"male\": -2.2,\r\n      \"female\": 2.5\r\n    }, {\r\n      \"age\": \"45-49\",\r\n      \"male\": -2.8,\r\n      \"female\": 3.0\r\n    }, {\r\n      \"age\": \"40-44\",\r\n      \"male\": -3.4,\r\n      \"female\": 3.6\r\n    }, {\r\n      \"age\": \"35-39\",\r\n      \"male\": -4.2,\r\n      \"female\": 4.1\r\n    }, {\r\n      \"age\": \"30-34\",\r\n      \"male\": -5.2,\r\n      \"female\": 4.8\r\n    }, {\r\n      \"age\": \"25-29\",\r\n      \"male\": -5.6,\r\n      \"female\": 5.1\r\n    }, {\r\n      \"age\": \"20-24\",\r\n      \"male\": -5.1,\r\n      \"female\": 5.1\r\n    }, {\r\n      \"age\": \"15-19\",\r\n      \"male\": -3.8,\r\n      \"female\": 3.8\r\n    }, {\r\n      \"age\": \"10-14\",\r\n      \"male\": -3.2,\r\n      \"female\": 3.4\r\n    }, {\r\n      \"age\": \"5-9\",\r\n      \"male\": -4.4,\r\n      \"female\": 4.1\r\n    }, {\r\n      \"age\": \"0-4\",\r\n      \"male\": -5.0,\r\n      \"female\": 4.8\r\n    }],\r\n    \"startDuration\": 1,\r\n    \"graphs\": [{\r\n      \"fillAlphas\": 0.8,\r\n      \"lineAlpha\": 0.2,\r\n      \"type\": \"column\",\r\n      \"valueField\": \"male\",\r\n      \"title\": \"Male\",\r\n      \"labelText\": \"[[value]]\",\r\n      \"clustered\": false,\r\n      \"labelFunction\": function (item) {\r\n        return Math.abs(item.values.value);\r\n      },\r\n      \"balloonFunction\": function (item) {\r\n        return item.category + \": \" + Math.abs(item.values.value) + \"%\";\r\n      }\r\n    }, {\r\n      \"fillAlphas\": 0.8,\r\n      \"lineAlpha\": 0.2,\r\n      \"type\": \"column\",\r\n      \"valueField\": \"female\",\r\n      \"title\": \"Female\",\r\n      \"labelText\": \"[[value]]\",\r\n      \"clustered\": false,\r\n      \"labelFunction\": function (item) {\r\n        return Math.abs(item.values.value);\r\n      },\r\n      \"balloonFunction\": function (item) {\r\n        return item.category + \": \" + Math.abs(item.values.value) + \"%\";\r\n      }\r\n    }],\r\n    \"categoryField\": \"age\",\r\n    \"categoryAxis\": {\r\n      \"gridPosition\": \"start\",\r\n      \"gridAlpha\": 0.2,\r\n      \"axisAlpha\": 0\r\n    },\r\n    \"valueAxes\": [{\r\n      \"gridAlpha\": 0,\r\n      \"ignoreAxisWidth\": true,\r\n      \"labelFunction\": function (value) {\r\n        return Math.abs(value) + '%';\r\n      },\r\n      \"guides\": [{\r\n        \"value\": 0,\r\n        \"lineAlpha\": 0.2\r\n      }]\r\n    }],\r\n    \"balloon\": {\r\n      \"fixedPosition\": true\r\n    },\r\n    \"chartCursor\": {\r\n      \"valueBalloonsEnabled\": false,\r\n      \"cursorAlpha\": 0.05,\r\n      \"fullWidth\": true\r\n    },\r\n    \"allLabels\": [{\r\n      \"text\": \"Male\",\r\n      \"x\": \"28%\",\r\n      \"y\": \"97%\",\r\n      \"bold\": true,\r\n      \"align\": \"middle\"\r\n    }, {\r\n      \"text\": \"Female\",\r\n      \"x\": \"75%\",\r\n      \"y\": \"97%\",\r\n      \"bold\": true,\r\n      \"align\": \"middle\"\r\n    }],\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StackedbarChartWithNegativeValues;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst StackedColumnChart = () => {\r\n\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"theme\": \"light\",\r\n    \"legend\": {\r\n      \"horizontalGap\": 10,\r\n      \"maxColumns\": 1,\r\n      \"position\": \"right\",\r\n      \"useGraphSettings\": true,\r\n      \"markerSize\": 10\r\n    },\r\n    \"dataProvider\": [{\r\n      \"year\": 2003,\r\n      \"europe\": 2.5,\r\n      \"namerica\": 2.5,\r\n      \"asia\": 2.1,\r\n      \"lamerica\": 0.3,\r\n      \"meast\": 0.2,\r\n      \"africa\": 0.1\r\n    }, {\r\n      \"year\": 2004,\r\n      \"europe\": 2.6,\r\n      \"namerica\": 2.7,\r\n      \"asia\": 2.2,\r\n      \"lamerica\": 0.3,\r\n      \"meast\": 0.3,\r\n      \"africa\": 0.1\r\n    }, {\r\n      \"year\": 2005,\r\n      \"europe\": 2.8,\r\n      \"namerica\": 2.9,\r\n      \"asia\": 2.4,\r\n      \"lamerica\": 0.3,\r\n      \"meast\": 0.3,\r\n      \"africa\": 0.1\r\n    }],\r\n    \"valueAxes\": [{\r\n      \"stackType\": \"regular\",\r\n      \"axisAlpha\": 0.3,\r\n      \"gridAlpha\": 0\r\n    }],\r\n    \"graphs\": [{\r\n      \"balloonText\": \"<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>\",\r\n      \"fillAlphas\": 0.8,\r\n      \"labelText\": \"[[value]]\",\r\n      \"lineAlpha\": 0.3,\r\n      \"title\": \"Europe\",\r\n      \"type\": \"column\",\r\n      \"color\": \"#000000\",\r\n      \"valueField\": \"europe\"\r\n    }, {\r\n      \"balloonText\": \"<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>\",\r\n      \"fillAlphas\": 0.8,\r\n      \"labelText\": \"[[value]]\",\r\n      \"lineAlpha\": 0.3,\r\n      \"title\": \"North America\",\r\n      \"type\": \"column\",\r\n      \"color\": \"#000000\",\r\n      \"valueField\": \"namerica\"\r\n    }, {\r\n      \"balloonText\": \"<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>\",\r\n      \"fillAlphas\": 0.8,\r\n      \"labelText\": \"[[value]]\",\r\n      \"lineAlpha\": 0.3,\r\n      \"title\": \"Asia-Pacific\",\r\n      \"type\": \"column\",\r\n      \"color\": \"#000000\",\r\n      \"valueField\": \"asia\"\r\n    }, {\r\n      \"balloonText\": \"<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>\",\r\n      \"fillAlphas\": 0.8,\r\n      \"labelText\": \"[[value]]\",\r\n      \"lineAlpha\": 0.3,\r\n      \"title\": \"Latin America\",\r\n      \"type\": \"column\",\r\n      \"color\": \"#000000\",\r\n      \"valueField\": \"lamerica\"\r\n    }, {\r\n      \"balloonText\": \"<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>\",\r\n      \"fillAlphas\": 0.8,\r\n      \"labelText\": \"[[value]]\",\r\n      \"lineAlpha\": 0.3,\r\n      \"title\": \"Middle-East\",\r\n      \"type\": \"column\",\r\n      \"color\": \"#000000\",\r\n      \"valueField\": \"meast\"\r\n    }, {\r\n      \"balloonText\": \"<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>\",\r\n      \"fillAlphas\": 0.8,\r\n      \"labelText\": \"[[value]]\",\r\n      \"lineAlpha\": 0.3,\r\n      \"title\": \"Africa\",\r\n      \"type\": \"column\",\r\n      \"color\": \"#000000\",\r\n      \"valueField\": \"africa\"\r\n    }],\r\n    \"categoryField\": \"year\",\r\n    \"categoryAxis\": {\r\n      \"gridPosition\": \"start\",\r\n      \"axisAlpha\": 0,\r\n      \"gridAlpha\": 0,\r\n      \"position\": \"left\"\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StackedColumnChart;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst SimpleColumnChart = () => {\r\n\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"theme\": \"light\",\r\n    \"dataProvider\": [{\r\n      \"name\": \"John\",\r\n      \"points\": 35654,\r\n      \"color\": \"#7F8DA9\",\r\n      \"bullet\": \"https://www.amcharts.com/lib/images/faces/A04.png\"\r\n    }, {\r\n      \"name\": \"Damon\",\r\n      \"points\": 65456,\r\n      \"color\": \"#FEC514\",\r\n      \"bullet\": \"https://www.amcharts.com/lib/images/faces/C02.png\"\r\n    }, {\r\n      \"name\": \"Patrick\",\r\n      \"points\": 45724,\r\n      \"color\": \"#DB4C3C\",\r\n      \"bullet\": \"https://www.amcharts.com/lib/images/faces/D02.png\"\r\n    }, {\r\n      \"name\": \"Mark\",\r\n      \"points\": 13654,\r\n      \"color\": \"#DAF0FD\",\r\n      \"bullet\": \"https://www.amcharts.com/lib/images/faces/E01.png\"\r\n    }],\r\n    \"valueAxes\": [{\r\n      \"maximum\": 80000,\r\n      \"minimum\": 0,\r\n      \"axisAlpha\": 0,\r\n      \"dashLength\": 4,\r\n      \"position\": \"left\"\r\n    }],\r\n    \"startDuration\": 1,\r\n    \"graphs\": [{\r\n      \"balloonText\": \"<span style='font-size:13px;'>[[category]]: <b>[[value]]</b></span>\",\r\n      \"bulletOffset\": 10,\r\n      \"bulletSize\": 52,\r\n      \"colorField\": \"color\",\r\n      \"cornerRadiusTop\": 8,\r\n      \"customBulletField\": \"bullet\",\r\n      \"fillAlphas\": 0.8,\r\n      \"lineAlpha\": 0,\r\n      \"type\": \"column\",\r\n      \"valueField\": \"points\"\r\n    }],\r\n    \"marginTop\": 0,\r\n    \"marginRight\": 0,\r\n    \"marginLeft\": 0,\r\n    \"marginBottom\": 0,\r\n    \"autoMargins\": false,\r\n    \"categoryField\": \"name\",\r\n    \"categoryAxis\": {\r\n      \"axisAlpha\": 0,\r\n      \"gridAlpha\": 0,\r\n      \"inside\": true,\r\n      \"tickLength\": 0\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SimpleColumnChart;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst Column3DChart = () => {\r\n\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"theme\": \"light\",\r\n    \"categoryField\": \"year\",\r\n    \"rotate\": true,\r\n    \"startDuration\": 1,\r\n    \"categoryAxis\": {\r\n      \"gridPosition\": \"start\",\r\n      \"position\": \"left\"\r\n    },\r\n    \"trendLines\": [],\r\n    \"graphs\": [\r\n      {\r\n        \"balloonText\": \"Income:[[value]]\",\r\n        \"fillAlphas\": 0.8,\r\n        \"id\": \"AmGraph-1\",\r\n        \"lineAlpha\": 0.2,\r\n        \"title\": \"Income\",\r\n        \"type\": \"column\",\r\n        \"valueField\": \"income\"\r\n      },\r\n      {\r\n        \"balloonText\": \"Expenses:[[value]]\",\r\n        \"fillAlphas\": 0.8,\r\n        \"id\": \"AmGraph-2\",\r\n        \"lineAlpha\": 0.2,\r\n        \"title\": \"Expenses\",\r\n        \"type\": \"column\",\r\n        \"valueField\": \"expenses\"\r\n      }\r\n    ],\r\n    \"guides\": [],\r\n    \"valueAxes\": [\r\n      {\r\n        \"id\": \"ValueAxis-1\",\r\n        \"position\": \"top\",\r\n        \"axisAlpha\": 0\r\n      }\r\n    ],\r\n    \"allLabels\": [],\r\n    \"balloon\": {},\r\n    \"titles\": [],\r\n    \"dataProvider\": [\r\n      {\r\n        \"year\": 2005,\r\n        \"income\": 23.5,\r\n        \"expenses\": 18.1\r\n      },\r\n      {\r\n        \"year\": 2006,\r\n        \"income\": 26.2,\r\n        \"expenses\": 22.8\r\n      },\r\n      {\r\n        \"year\": 2007,\r\n        \"income\": 30.1,\r\n        \"expenses\": 23.9\r\n      },\r\n      {\r\n        \"year\": 2008,\r\n        \"income\": 29.5,\r\n        \"expenses\": 25.1\r\n      },\r\n      {\r\n        \"year\": 2009,\r\n        \"income\": 24.6,\r\n        \"expenses\": 25\r\n      }\r\n    ],\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Column3DChart;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst Bar3DChart = () => {\r\n\r\n  const config = {\r\n    \"theme\": \"light\",\r\n    \"type\": \"serial\",\r\n    \"dataProvider\": [{\r\n      \"year\": 2005,\r\n      \"income\": 23.5\r\n    }, {\r\n      \"year\": 2006,\r\n      \"income\": 26.2\r\n    }, {\r\n      \"year\": 2007,\r\n      \"income\": 30.1\r\n    }, {\r\n      \"year\": 2008,\r\n      \"income\": 29.5\r\n    }, {\r\n      \"year\": 2009,\r\n      \"income\": 24.6\r\n    }],\r\n    \"valueAxes\": [{\r\n      \"title\": \"Income in millions, USD\"\r\n    }],\r\n    \"graphs\": [{\r\n      \"balloonText\": \"Income in [[category]]:[[value]]\",\r\n      \"fillAlphas\": 1,\r\n      \"lineAlpha\": 0.2,\r\n      \"title\": \"Income\",\r\n      \"type\": \"column\",\r\n      \"valueField\": \"income\"\r\n    }],\r\n    \"depth3D\": 20,\r\n    \"angle\": 30,\r\n    \"rotate\": true,\r\n    \"categoryField\": \"year\",\r\n    \"categoryAxis\": {\r\n      \"gridPosition\": \"start\",\r\n      \"fillAlpha\": 0.05,\r\n      \"position\": \"left\"\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bar3DChart;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst BarAndLineChartMix = () => {\r\n\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"theme\": \"light\",\r\n    \"handDrawn\": true,\r\n    \"handDrawScatter\": 3,\r\n    \"legend\": {\r\n      \"useGraphSettings\": true,\r\n      \"markerSize\": 12,\r\n      \"valueWidth\": 0,\r\n      \"verticalGap\": 0\r\n    },\r\n    \"dataProvider\": [{\r\n      \"year\": 2005,\r\n      \"income\": 23.5,\r\n      \"expenses\": 18.1\r\n    }, {\r\n      \"year\": 2006,\r\n      \"income\": 26.2,\r\n      \"expenses\": 22.8\r\n    }, {\r\n      \"year\": 2007,\r\n      \"income\": 30.1,\r\n      \"expenses\": 23.9\r\n    }, {\r\n      \"year\": 2008,\r\n      \"income\": 29.5,\r\n      \"expenses\": 25.1\r\n    }, {\r\n      \"year\": 2009,\r\n      \"income\": 24.6,\r\n      \"expenses\": 25\r\n    }],\r\n    \"valueAxes\": [{\r\n      \"minorGridAlpha\": 0.08,\r\n      \"minorGridEnabled\": true,\r\n      \"position\": \"top\",\r\n      \"axisAlpha\": 0\r\n    }],\r\n    \"startDuration\": 1,\r\n    \"graphs\": [{\r\n      \"balloonText\": \"<span style='font-size:13px;'>[[title]] in [[category]]:<b>[[value]]</b></span>\",\r\n      \"title\": \"Income\",\r\n      \"type\": \"column\",\r\n      \"fillAlphas\": 0.8,\r\n\r\n      \"valueField\": \"income\"\r\n    }, {\r\n      \"balloonText\": \"<span style='font-size:13px;'>[[title]] in [[category]]:<b>[[value]]</b></span>\",\r\n      \"bullet\": \"round\",\r\n      \"bulletBorderAlpha\": 1,\r\n      \"bulletColor\": \"#FFFFFF\",\r\n      \"useLineColorForBulletBorder\": true,\r\n      \"fillAlphas\": 0,\r\n      \"lineThickness\": 2,\r\n      \"lineAlpha\": 1,\r\n      \"bulletSize\": 7,\r\n      \"title\": \"Expenses\",\r\n      \"valueField\": \"expenses\"\r\n    }],\r\n    \"rotate\": true,\r\n    \"categoryField\": \"year\",\r\n    \"categoryAxis\": {\r\n      \"gridPosition\": \"start\"\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BarAndLineChartMix;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst FloatingBarChart = () => {\r\n\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"theme\": \"light\",\r\n    \"dataProvider\": [{\r\n      \"country\": \"USA\",\r\n      \"visits\": 2025\r\n    }, {\r\n      \"country\": \"China\",\r\n      \"visits\": 1882\r\n    }, {\r\n      \"country\": \"Japan\",\r\n      \"visits\": 1809\r\n    }, {\r\n      \"country\": \"Germany\",\r\n      \"visits\": 1322\r\n    }, {\r\n      \"country\": \"UK\",\r\n      \"visits\": 1122\r\n    }, {\r\n      \"country\": \"France\",\r\n      \"visits\": 1114\r\n    }, {\r\n      \"country\": \"India\",\r\n      \"visits\": 984\r\n    }, {\r\n      \"country\": \"Spain\",\r\n      \"visits\": 711\r\n    }, {\r\n      \"country\": \"Netherlands\",\r\n      \"visits\": 665\r\n    }, {\r\n      \"country\": \"Russia\",\r\n      \"visits\": 580\r\n    }, {\r\n      \"country\": \"South Korea\",\r\n      \"visits\": 443\r\n    }, {\r\n      \"country\": \"Canada\",\r\n      \"visits\": 441\r\n    }, {\r\n      \"country\": \"Brazil\",\r\n      \"visits\": 395\r\n    }],\r\n    \"valueAxes\": [{\r\n      \"gridColor\": \"#FFFFFF\",\r\n      \"gridAlpha\": 0.2,\r\n      \"dashLength\": 0\r\n    }],\r\n    \"gridAboveGraphs\": true,\r\n    \"startDuration\": 1,\r\n    \"graphs\": [{\r\n      \"balloonText\": \"[[category]]: <b>[[value]]</b>\",\r\n      \"fillAlphas\": 0.8,\r\n      \"lineAlpha\": 0.2,\r\n      \"type\": \"column\",\r\n      \"valueField\": \"visits\"\r\n    }],\r\n    \"chartCursor\": {\r\n      \"categoryBalloonEnabled\": false,\r\n      \"cursorAlpha\": 0,\r\n      \"zoomable\": false\r\n    },\r\n    \"categoryField\": \"country\",\r\n    \"categoryAxis\": {\r\n      \"gridPosition\": \"start\",\r\n      \"gridAlpha\": 0,\r\n      \"tickPosition\": \"start\",\r\n      \"tickLength\": 20\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FloatingBarChart;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst SimpleColumnChart = () => {\r\n\r\n  const config = {\r\n    \"theme\": \"light\",\r\n    \"type\": \"serial\",\r\n    \"dataProvider\": [{\r\n      \"country\": \"USA\",\r\n      \"year2004\": 3.5,\r\n      \"year2005\": 4.2\r\n    }, {\r\n      \"country\": \"UK\",\r\n      \"year2004\": 1.7,\r\n      \"year2005\": 3.1\r\n    }, {\r\n      \"country\": \"Canada\",\r\n      \"year2004\": 2.8,\r\n      \"year2005\": 2.9\r\n    }, {\r\n      \"country\": \"Japan\",\r\n      \"year2004\": 2.6,\r\n      \"year2005\": 2.3\r\n    }, {\r\n      \"country\": \"France\",\r\n      \"year2004\": 1.4,\r\n      \"year2005\": 2.1\r\n    }, {\r\n      \"country\": \"Brazil\",\r\n      \"year2004\": 2.6,\r\n      \"year2005\": 4.9\r\n    }, {\r\n      \"country\": \"Russia\",\r\n      \"year2004\": 6.4,\r\n      \"year2005\": 7.2\r\n    }, {\r\n      \"country\": \"India\",\r\n      \"year2004\": 8,\r\n      \"year2005\": 7.1\r\n    }, {\r\n      \"country\": \"China\",\r\n      \"year2004\": 9.9,\r\n      \"year2005\": 10.1\r\n    }],\r\n    \"valueAxes\": [{\r\n      \"stackType\": \"3d\",\r\n      \"unit\": \"%\",\r\n      \"position\": \"left\",\r\n      \"title\": \"GDP growth rate\",\r\n    }],\r\n    \"startDuration\": 1,\r\n    \"graphs\": [{\r\n      \"balloonText\": \"GDP grow in [[category]] (2004): <b>[[value]]</b>\",\r\n      \"fillAlphas\": 0.9,\r\n      \"lineAlpha\": 0.2,\r\n      \"title\": \"2004\",\r\n      \"type\": \"column\",\r\n      \"valueField\": \"year2004\"\r\n    }, {\r\n      \"balloonText\": \"GDP grow in [[category]] (2005): <b>[[value]]</b>\",\r\n      \"fillAlphas\": 0.9,\r\n      \"lineAlpha\": 0.2,\r\n      \"title\": \"2005\",\r\n      \"type\": \"column\",\r\n      \"valueField\": \"year2005\"\r\n    }],\r\n    \"plotAreaFillAlphas\": 0.1,\r\n    \"depth3D\": 60,\r\n    \"angle\": 30,\r\n    \"categoryField\": \"country\",\r\n    \"categoryAxis\": {\r\n      \"gridPosition\": \"start\"\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SimpleColumnChart;\r\n","import React from \"react\";\r\nimport {Card, Col, Row} from \"antd\";\r\n\r\nimport ContainerHeader from \"components/ContainerHeader\";\r\nimport ColumnWithRotatedSeries from \"./Components/ColumnWithRotatedSeries\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport SimpleColumnChart from \"./Components/SimpleColumnChart\";\r\nimport ColumnAndLineMix from \"./Components/ColumnAndLineMix\";\r\nimport Cylinder3DChart from \"./Components/Cylinder3DChart\";\r\nimport Column3DChart from \"./Components/Column3DChart\";\r\nimport LayeredColumnChart from \"./Components/LayeredColumnChart\";\r\nimport StackedbarChartWithNegativeValues from \"./Components/StackedbarChartWithNegativeValues\";\r\nimport StackedBarChart from \"../../recharts/bar/Components/StackedBarChart\";\r\nimport StackedColumnChart from \"./Components/StackedColumnChart\";\r\nimport ColumnChartWithImagesOnTop from \"./Components/ColumnChartWithImagesOnTop\";\r\nimport ClusteredBarChart from \"./Components/ClusteredBarChart\";\r\nimport Bar3DChart from \"./Components/Bar3DChart\";\r\nimport BarAndLineChartMix from \"./Components/BarAndLineChartMix\";\r\nimport FloatingBarChart from \"./Components/FloatingBarChart\";\r\nimport Stacked3DColumnChart from \"./Components/Stacked3DColumnChart\";\r\n\r\nconst BarChart = ({match}) => {\r\n  return (\r\n    <div className=\"gx-main-content\">\r\n      <ContainerHeader title={<IntlMessages id=\"sidebar.chart.bar\"/>} match={match}/>\r\n\r\n      <Row>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Column With Rotated Series\">\r\n            <ColumnWithRotatedSeries/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Simple Column Chart\">\r\n            <SimpleColumnChart/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Column And Line Mix\">\r\n            <ColumnAndLineMix/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Stacked Bar Chart With Negative Values\">\r\n            <StackedbarChartWithNegativeValues/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Column 3D Chart\">\r\n            <Column3DChart/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Cylinder 3D Chart\">\r\n            <Cylinder3DChart/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Layered Column Chart\">\r\n            <LayeredColumnChart/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"3D Stacked Column Chart\">\r\n            <Stacked3DColumnChart/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Layered Column Chart\">\r\n            <FloatingBarChart/>\r\n          </Card>\r\n        </Col>\r\n\r\n\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Bar And Line Chart Mix\">\r\n            <BarAndLineChartMix/>\r\n          </Card>\r\n        </Col>\r\n\r\n\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"3D Bar Chart\">\r\n            <Bar3DChart/>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Column And Line Mix\">\r\n            <ClusteredBarChart/>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Column Chart With Images On Top\">\r\n            <ColumnChartWithImagesOnTop/>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Column With Rotated Series\">\r\n            <ColumnWithRotatedSeries/>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Stacked Bar Chart\">\r\n            <StackedBarChart/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Stacked Column Chart\">\r\n            <StackedColumnChart/>\r\n          </Card>\r\n        </Col>\r\n\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n"],"sourceRoot":""}