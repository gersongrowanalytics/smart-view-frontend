{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/SearchOutlined.js","../node_modules/@ant-design/icons/es/icons/SearchOutlined.js","../node_modules/antd/es/auto-complete/index.js","routes/components/dataEntry/AutoComplete/Basic.js","routes/components/dataEntry/AutoComplete/Customized.js","routes/components/dataEntry/AutoComplete/CustomizeInputComponent.js","routes/components/dataEntry/AutoComplete/NonCaseSensitiveAutoComplete.js","routes/components/dataEntry/AutoComplete/LookupPatterns.js","routes/components/dataEntry/AutoComplete/index.js"],"names":["SearchOutlined","props","ref","React","AntdIcon","Object","assign","icon","SearchOutlinedSvg","displayName","Option","Select","InternalSelect","isSelectOptionOrSelectOptGroup","child","type","isSelectOption","isSelectOptGroup","AutoComplete","customizeInput","customizePrefixCls","prefixCls","className","children","dataSource","childNodes","toArray","selectRef","current","length","isValidElement","_childNodes","_slicedToArray","optionChildren","getInputElement","map","item","_typeof","key","value","optionValue","text","Error","devWarning","ConfigConsumer","_ref","getPrefixCls","_extends","omit","classNames","concat","mode","SECRET_COMBOBOX_MODE_DO_NOT_USE","RefAutoComplete","onSelect","console","log","Basic","state","handleSearch","setState","this","title","style","width","onSearch","placeholder","Component","Customized","result","indexOf","domain","email","TextArea","Input","CustomizeInputComponent","handleKeyPress","ev","height","onKeyPress","NonCaseSensitiveAutoComplete","filterOption","inputValue","option","toUpperCase","OptGroup","options","count","group","label","float","href","target","rel","opt","disabled","LookupPatterns","dropdownClassName","dropdownMatchSelectWidth","dropdownStyle","size","optionLabelProp","suffix","lg","md","sm","xs"],"mappings":"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","file":"static/js/61.85cca64b.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar SearchOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z\" } }] }, \"name\": \"search\", \"theme\": \"outlined\" };\nexport default SearchOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SearchOutlinedSvg from \"@ant-design/icons-svg/es/asn/SearchOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SearchOutlined = function SearchOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: SearchOutlinedSvg\n  }));\n};\n\nSearchOutlined.displayName = 'SearchOutlined';\nexport default React.forwardRef(SearchOutlined);","import _extends from \"@babel/runtime/helpers/extends\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * TODO: 4.0\n * - remove `dataSource`\n * - `size` not work with customizeInput\n * - customizeInput not feedback `ENTER` key since accessibility enhancement\n */\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport Select from '../select';\nimport { ConfigConsumer } from '../config-provider';\nimport devWarning from '../_util/devWarning';\nimport { isValidElement } from '../_util/reactNode';\nvar Option = Select.Option;\nvar InternalSelect = Select;\n\nfunction isSelectOptionOrSelectOptGroup(child) {\n  return child && child.type && (child.type.isSelectOption || child.type.isSelectOptGroup);\n}\n\nvar AutoComplete = function AutoComplete(props, ref) {\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      children = props.children,\n      dataSource = props.dataSource;\n  var childNodes = toArray(children);\n  var selectRef = React.useRef();\n  React.useImperativeHandle(ref, function () {\n    return selectRef.current;\n  }); // ============================= Input =============================\n\n  var customizeInput;\n\n  if (childNodes.length === 1 && isValidElement(childNodes[0]) && !isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    var _childNodes = _slicedToArray(childNodes, 1);\n\n    customizeInput = _childNodes[0];\n  }\n\n  var getInputElement = function getInputElement() {\n    return customizeInput;\n  }; // ============================ Options ============================\n\n\n  var optionChildren; // [Legacy] convert `children` or `dataSource` into option children\n\n  if (childNodes.length && isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    optionChildren = children;\n  } else {\n    optionChildren = dataSource ? dataSource.map(function (item) {\n      if (isValidElement(item)) {\n        return item;\n      }\n\n      switch (_typeof(item)) {\n        case 'string':\n          return /*#__PURE__*/React.createElement(Option, {\n            key: item,\n            value: item\n          }, item);\n\n        case 'object':\n          {\n            var optionValue = item.value;\n            return /*#__PURE__*/React.createElement(Option, {\n              key: optionValue,\n              value: optionValue\n            }, item.text);\n          }\n\n        default:\n          throw new Error('AutoComplete[dataSource] only supports type `string[] | Object[]`.');\n      }\n    }) : [];\n  } // ============================ Warning ============================\n\n\n  React.useEffect(function () {\n    devWarning(!('dataSource' in props), 'AutoComplete', '`dataSource` is deprecated, please use `options` instead.');\n    devWarning(!customizeInput || !('size' in props), 'AutoComplete', 'You need to control style self instead of setting `size` when using customize input.');\n  }, []);\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n    var prefixCls = getPrefixCls('select', customizePrefixCls);\n    return /*#__PURE__*/React.createElement(InternalSelect, _extends({\n      ref: selectRef\n    }, omit(props, ['dataSource']), {\n      prefixCls: prefixCls,\n      className: classNames(className, \"\".concat(prefixCls, \"-auto-complete\")),\n      mode: Select.SECRET_COMBOBOX_MODE_DO_NOT_USE,\n      getInputElement: getInputElement\n    }), optionChildren);\n  });\n};\n\nvar RefAutoComplete = /*#__PURE__*/React.forwardRef(AutoComplete);\nRefAutoComplete.Option = Option;\nexport default RefAutoComplete;","import React, {Component} from \"react\";\r\n\r\nimport {AutoComplete, Card} from \"antd\";\r\n\r\nfunction onSelect(value) {\r\n  console.log('onSelect', value);\r\n}\r\n\r\n\r\nclass Basic extends Component {\r\n  state = {\r\n    dataSource: [],\r\n  }\r\n\r\n  handleSearch = (value) => {\r\n    this.setState({\r\n      dataSource: !value ? [] : [\r\n        value,\r\n        value + value,\r\n        value + value + value,\r\n      ],\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {dataSource} = this.state;\r\n    return (\r\n      <Card className=\"gx-card\" title=\"ErrorStatus\">\r\n        <AutoComplete\r\n          dataSource={dataSource}\r\n          style={{width: 200}}\r\n          onSelect={onSelect}\r\n          onSearch={this.handleSearch}\r\n          placeholder=\"input here\"\r\n        />\r\n      </Card>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Basic;\r\n\r\n","import React, {Component} from \"react\";\r\n\r\nimport {AutoComplete, Card} from \"antd\";\r\n\r\nconst Option = AutoComplete.Option;\r\n\r\n\r\nclass Customized extends Component {\r\n  state = {\r\n    result: [],\r\n  };\r\n\r\n  handleSearch = (value) => {\r\n    let result;\r\n    if (!value || value.indexOf('@') >= 0) {\r\n      result = [];\r\n    } else {\r\n      result = ['gmail.com', '163.com', 'qq.com'].map(domain => `${value}@${domain}`);\r\n    }\r\n    this.setState({result});\r\n  };\r\n\r\n  render() {\r\n    const {result} = this.state;\r\n    const children = result.map((email) => {\r\n      return <Option key={email}>{email}</Option>;\r\n    });\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Customized\">\r\n        <AutoComplete\r\n          style={{width: 200}}\r\n          onSearch={this.handleSearch}\r\n          placeholder=\"input here\"\r\n        >\r\n          {children}\r\n        </AutoComplete>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Customized;\r\n\r\n","import React, {Component} from \"react\";\r\nimport {AutoComplete, Card, Input} from \"antd\";\r\n\r\nconst {TextArea} = Input;\r\n\r\nfunction onSelect(value) {\r\n  console.log('onSelect', value);\r\n}\r\n\r\n\r\nclass CustomizeInputComponent extends Component {\r\n  state = {\r\n    dataSource: [],\r\n  }\r\n\r\n  handleSearch = (value) => {\r\n    this.setState({\r\n      dataSource: !value ? [] : [\r\n        value,\r\n        value + value,\r\n        value + value + value,\r\n      ],\r\n    });\r\n  }\r\n\r\n  handleKeyPress = (ev) => {\r\n    console.log('handleKeyPress', ev);\r\n  }\r\n\r\n\r\n  render() {\r\n    const {dataSource} = this.state;\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Customize Input Component\">\r\n        <AutoComplete\r\n          dataSource={dataSource}\r\n          style={{width: 200}}\r\n          onSelect={onSelect}\r\n          onSearch={this.handleSearch}\r\n        >\r\n        <TextArea\r\n          placeholder=\"input here\"\r\n          className=\"custom\"\r\n          style={{height: 50}}\r\n          onKeyPress={this.handleKeyPress}\r\n        />\r\n        </AutoComplete>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default CustomizeInputComponent;\r\n\r\n","import React from \"react\";\r\nimport {AutoComplete, Card} from \"antd\";\r\n\r\nconst dataSource = ['Burns Bay Road', 'Downing Street', 'Wall Street'];\r\n\r\nconst NonCaseSensitiveAutoComplete = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Non CaseSensitive AutoComplete\">\r\n      <AutoComplete\r\n        style={{width: 200}}\r\n        dataSource={dataSource}\r\n        placeholder=\"try to type `b`\"\r\n        filterOption={(inputValue, option) => option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default NonCaseSensitiveAutoComplete;\r\n","import React from \"react\";\r\nimport {AutoComplete, Card, Input} from \"antd\";\r\nimport Icon from '@ant-design/icons';\r\nimport {SearchOutlined} from \"@ant-design/icons\";\r\nconst Option = AutoComplete.Option;\r\nconst OptGroup = AutoComplete.OptGroup;\r\n\r\nconst dataSource = [{\r\n  title: 'g-axon',\r\n  children: [{\r\n    title: 'AntDesign',\r\n    count: 10000,\r\n  }, {\r\n    title: 'AntDesign UI',\r\n    count: 10600,\r\n  }],\r\n}, {\r\n  title: 'jumbo',\r\n  children: [{\r\n    title: 'jumbo UI',\r\n    count: 60100,\r\n  }, {\r\n    title: 'AntDesign',\r\n    count: 30010,\r\n  }],\r\n}, {\r\n  title: 'React',\r\n  children: [{\r\n    title: 'AntDesign 2.0',\r\n    count: 100000,\r\n  }],\r\n}];\r\n\r\nfunction renderTitle(title) {\r\n  return (\r\n    <span>\r\n      {title}\r\n      <a\r\n        style={{float: 'right'}}\r\n        href=\"https://www.google.com/search?q=antd\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >version 1.1\r\n      </a>\r\n    </span>\r\n  );\r\n}\r\n\r\nconst options = dataSource.map(group => (\r\n  <OptGroup\r\n    key={group.title}\r\n    label={renderTitle(group.title)}\r\n  >\r\n    {group.children.map(opt => (\r\n      <Option key={opt.title} value={opt.title}>\r\n        {opt.title}\r\n        <span className=\"certain-search-item-count\">{opt.count}</span>\r\n      </Option>\r\n    ))}\r\n  </OptGroup>\r\n)).concat([\r\n  <Option disabled key=\"all\" className=\"show-all\">\r\n    <a\r\n      href=\"https://www.google.com/search?q=antd\"\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      version 1.2\r\n    </a>\r\n  </Option>,\r\n]);\r\n\r\nconst LookupPatterns = () => {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Lookup Patterns\">\r\n        <div className=\"certain-category-search-wrapper\" style={{width: 250}}>\r\n          <AutoComplete\r\n            className=\"certain-category-search\"\r\n            dropdownClassName=\"certain-category-search-dropdown\"\r\n            dropdownMatchSelectWidth={false}\r\n            dropdownStyle={{width: 300}}\r\n            size=\"large\"\r\n            style={{width: '100%'}}\r\n            dataSource={options}\r\n            placeholder=\"input here\"\r\n            optionLabelProp=\"value\"\r\n          >\r\n            <Input suffix={<SearchOutlined/>}/>\r\n          </AutoComplete>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n;\r\n\r\nexport default LookupPatterns;\r\n","import React from \"react\";\r\nimport {Col, Row} from \"antd\";\r\n\r\nimport Basic from \"./Basic\";\r\nimport Customized from \"./Customized\";\r\nimport CustomizeInputComponent from \"./CustomizeInputComponent\";\r\nimport NonCaseSensitiveAutoComplete from \"./NonCaseSensitiveAutoComplete\";\r\nimport LookupPatterns from \"./LookupPatterns\";\r\n\r\nconst AutoComplete = () => {\r\n  return (\r\n    <Row>\r\n      <Col lg={12} md={12} sm={24} xs={24}>\r\n        <Basic/>\r\n        <Customized/>\r\n        <CustomizeInputComponent/>\r\n      </Col>\r\n      <Col lg={12} md={12} sm={24} xs={24}>\r\n        <NonCaseSensitiveAutoComplete/>\r\n        <LookupPatterns/>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default AutoComplete;\r\n"],"sourceRoot":""}