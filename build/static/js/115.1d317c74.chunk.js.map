{"version":3,"sources":["routes/components/dataDisplay/Tabs/Basic.js","routes/components/dataDisplay/Tabs/Slide.js","routes/components/dataDisplay/Tabs/Size.js","routes/components/dataDisplay/Tabs/Position.js","routes/components/dataDisplay/Tabs/CardTab.js","routes/components/dataDisplay/Tabs/CustomizeTrigger.js","routes/components/dataDisplay/Tabs/index.js"],"names":["TabPane","Tabs","Basic","className","title","defaultActiveKey","onChange","key","console","log","tab","Slide","useState","mode","setMode","Group","e","target","value","Button","tabPosition","style","height","Size","size","setSize","Option","Select","Position","setTabPosition","dropdownMatchSelectWidth","CardTab","type","CustomizeTrigger","props","activeKey","setState","onEdit","targetKey","action","add","panes","state","newTabIndex","push","content","remove","lastIndex","forEach","pane","i","filter","onClick","this","hideAdd","map","React","Component","span"],"mappings":"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","file":"static/js/115.1d317c74.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Card, Tabs} from \"antd\";\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nconst Basic = () => {\r\n  const callback = (key) => {\r\n    console.log(key);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Basic\">\r\n      <Tabs defaultActiveKey=\"1\" onChange={callback}>\r\n        <TabPane tab=\"Tab 1\" key=\"1\">Content of Tab Pane 1</TabPane>\r\n        <TabPane tab=\"Tab 2\" key=\"2\">Content of Tab Pane 2</TabPane>\r\n        <TabPane tab=\"Tab 3\" key=\"3\">Content of Tab Pane 3</TabPane>\r\n      </Tabs>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Basic;\r\n","import React, {useState} from \"react\";\r\nimport {Card, Radio, Tabs} from \"antd\";\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nconst Slide = () => {\r\n\r\n  const [mode, setMode] = useState('top');\r\n\r\n const handleModeChange = (e) => {\r\n    setMode(e.target.value);\r\n  };\r\n\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Slide\">\r\n        <Radio.Group onChange={handleModeChange} value={mode} className=\"gx-mb-2\">\r\n          <Radio.Button value=\"top\">Horizontal</Radio.Button>\r\n          <Radio.Button value=\"left\">Vertical</Radio.Button>\r\n        </Radio.Group>\r\n        <Tabs\r\n          defaultActiveKey=\"1\"\r\n          tabPosition={mode}\r\n          style={{height: 220}}\r\n        >\r\n          <TabPane tab=\"Tab 1\" key=\"1\">Content of tab 1</TabPane>\r\n          <TabPane tab=\"Tab 2\" key=\"2\">Content of tab 2</TabPane>\r\n          <TabPane tab=\"Tab 3\" key=\"3\">Content of tab 3</TabPane>\r\n          <TabPane tab=\"Tab 4\" key=\"4\">Content of tab 4</TabPane>\r\n          <TabPane tab=\"Tab 5\" key=\"5\">Content of tab 5</TabPane>\r\n          <TabPane tab=\"Tab 6\" key=\"6\">Content of tab 6</TabPane>\r\n          <TabPane tab=\"Tab 7\" key=\"7\">Content of tab 7</TabPane>\r\n          <TabPane tab=\"Tab 8\" key=\"8\">Content of tab 8</TabPane>\r\n          <TabPane tab=\"Tab 9\" key=\"9\">Content of tab 9</TabPane>\r\n          <TabPane tab=\"Tab 10\" key=\"10\">Content of tab 10</TabPane>\r\n          <TabPane tab=\"Tab 11\" key=\"11\">Content of tab 11</TabPane>\r\n        </Tabs>\r\n      </Card>\r\n    );\r\n  }\r\n\r\nexport default Slide;\r\n","import React, {useState} from \"react\";\r\nimport {Card, Radio, Tabs} from \"antd\";\r\n\r\nconst {TabPane} = Tabs;\r\n\r\nconst Size = () => {\r\n\r\n  const [size, setSize] = useState('small');\r\n\r\n  const onChange = (e) => {\r\n    setSize(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Size\">\r\n      <Radio.Group value={size} onChange={onChange} className=\"gx-mb-3\">\r\n        <Radio.Button value=\"small\">Small</Radio.Button>\r\n        <Radio.Button value=\"default\">Default</Radio.Button>\r\n        <Radio.Button value=\"large\">Large</Radio.Button>\r\n      </Radio.Group>\r\n      <Tabs defaultActiveKey=\"1\" size={size}>\r\n        <TabPane tab=\"Tab 1\" key=\"1\">Content of tab 1</TabPane>\r\n        <TabPane tab=\"Tab 2\" key=\"2\">Content of tab 2</TabPane>\r\n        <TabPane tab=\"Tab 3\" key=\"3\">Content of tab 3</TabPane>\r\n      </Tabs>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Size;\r\n","import React, {useState} from \"react\";\r\nimport {Card, Select, Tabs} from \"antd\";\r\n\r\nconst TabPane = Tabs.TabPane;\r\nconst Option = Select.Option;\r\n\r\nconst Position = () => {\r\n\r\n  const [tabPosition, setTabPosition] = useState('top');\r\n\r\n  const changeTabPosition = (tabPosition) => {\r\n    setTabPosition(tabPosition)\r\n  };\r\n\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Position\">\r\n      <div className=\"gx-mb-3\">\r\n        Tab positionï¼š\r\n        <Select\r\n          value={tabPosition}\r\n          onChange={changeTabPosition}\r\n          dropdownMatchSelectWidth={false}\r\n        >\r\n          <Option value=\"top\">top</Option>\r\n          <Option value=\"bottom\">bottom</Option>\r\n          <Option value=\"left\">left</Option>\r\n          <Option value=\"right\">right</Option>\r\n        </Select>\r\n      </div>\r\n      <Tabs tabPosition={tabPosition}>\r\n        <TabPane tab=\"Tab 1\" key=\"1\">Content of Tab 1</TabPane>\r\n        <TabPane tab=\"Tab 2\" key=\"2\">Content of Tab 2</TabPane>\r\n        <TabPane tab=\"Tab 3\" key=\"3\">Content of Tab 3</TabPane>\r\n      </Tabs>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Position;\r\n","import React from \"react\";\r\nimport {Card, Tabs} from \"antd\";\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nconst CardTab = () => {\r\n    const callback = (key) => {\r\n      console.log(key);\r\n    };\r\n\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Card Tab\">\r\n        <Tabs onChange={callback} type=\"card\">\r\n          <TabPane tab=\"Tab 1\" key=\"1\">Content of Tab Pane 1</TabPane>\r\n          <TabPane tab=\"Tab 2\" key=\"2\">Content of Tab Pane 2</TabPane>\r\n          <TabPane tab=\"Tab 3\" key=\"3\">Content of Tab Pane 3</TabPane>\r\n        </Tabs>\r\n      </Card>\r\n    );\r\n  }\r\n;\r\n\r\nexport default CardTab;\r\n","import React from \"react\";\r\nimport {Button, Card, Tabs} from \"antd\";\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nclass CustomizeTrigger extends React.Component {\r\n  onChange = (activeKey) => {\r\n    this.setState({activeKey});\r\n  };\r\n  onEdit = (targetKey, action) => {\r\n    this[action](targetKey);\r\n  };\r\n  add = () => {\r\n    const panes = this.state.panes;\r\n    const activeKey = `newTab${this.newTabIndex++}`;\r\n    panes.push({title: 'New Tab', content: 'New Tab Pane', key: activeKey});\r\n    this.setState({panes, activeKey});\r\n  };\r\n  remove = (targetKey) => {\r\n    let activeKey = this.state.activeKey;\r\n    let lastIndex;\r\n    this.state.panes.forEach((pane, i) => {\r\n      if (pane.key === targetKey) {\r\n        lastIndex = i - 1;\r\n      }\r\n    });\r\n    const panes = this.state.panes.filter(pane => pane.key !== targetKey);\r\n    if (lastIndex >= 0 && activeKey === targetKey) {\r\n      activeKey = panes[lastIndex].key;\r\n    }\r\n    this.setState({panes, activeKey});\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.newTabIndex = 0;\r\n    const panes = [\r\n      {title: 'Tab 1', content: 'Content of Tab Pane 1', key: '1'},\r\n      {title: 'Tab 2', content: 'Content of Tab Pane 2', key: '2'},\r\n    ];\r\n    this.state = {\r\n      activeKey: panes[0].key,\r\n      panes,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Customize Trigger\">\r\n        <div className=\"gx-mb-3\">\r\n          <Button onClick={this.add}>ADD</Button>\r\n        </div>\r\n        <Tabs\r\n          hideAdd\r\n          onChange={this.onChange}\r\n          activeKey={this.state.activeKey}\r\n          type=\"editable-card\"\r\n          onEdit={this.onEdit}\r\n        >\r\n          {this.state.panes.map(pane => <TabPane tab={pane.title} key={pane.key}>{pane.content}</TabPane>)}\r\n        </Tabs>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomizeTrigger;\r\n","import React from \"react\";\r\nimport {Col, Row} from \"antd\";\r\n\r\nimport Basic from \"./Basic\";\r\nimport Slide from \"./Slide\";\r\nimport Size from \"./Size\";\r\nimport Position from \"./Position\";\r\nimport CardTab from \"./CardTab\";\r\nimport CustomizeTrigger from \"./CustomizeTrigger\";\r\n\r\n\r\nconst Tabs = () => {\r\n\r\n    return (\r\n      <Row>\r\n        <Col span={24}>\r\n          <Basic/>\r\n          <Slide/>\r\n          <Size/>\r\n        </Col>\r\n        <Col span={24}>\r\n          <Position/>\r\n          <CardTab/>\r\n          <CustomizeTrigger/>\r\n        </Col>\r\n      </Row>\r\n    );\r\n};\r\n\r\n\r\nexport default (Tabs);\r\n"],"sourceRoot":""}